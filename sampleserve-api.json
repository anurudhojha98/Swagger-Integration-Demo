{
    "swagger": "2.0",
    "basePath": "/api/v2",
    "paths": {
        "/analytical-graph": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ReportBlockGraph"
                        }
                    }
                },
                "operationId": "post_analytical_graph",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ReportBlockGraph"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/checklist-items/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_checklist_item_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChecklistItem"
                        }
                    }
                },
                "operationId": "put_checklist_item_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ChecklistItem"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ChecklistItem"
                        }
                    }
                },
                "operationId": "get_checklist_item_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, type, value, description, checklist_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [checklist]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/checklists/{checklist_id}/items": {
            "parameters": [
                {
                    "name": "checklist_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ChecklistItem"
                            }
                        }
                    }
                },
                "operationId": "get_checklist_item_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, type, value, description, checklist_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [checklist]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ChecklistItem"
                        }
                    }
                },
                "operationId": "post_checklist_item_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ChecklistItem"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/checklists/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_checklist_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Checklist"
                        }
                    }
                },
                "operationId": "put_checklist_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Checklist"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Checklist"
                        }
                    }
                },
                "operationId": "get_checklist_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, lab_id, sample_delivery_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [lab, sample_delivery, items]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/combination-graph": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ReportBlockGraph"
                        }
                    }
                },
                "operationId": "post_combination_graph",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ReportBlockGraph"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/commercial-carriers": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CommercialCarrier"
                            }
                        }
                    }
                },
                "operationId": "get_commercial_carrier_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, provider]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "provider",
                        "in": "query",
                        "type": "string",
                        "description": "Provider's name"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CommercialCarrier"
                        }
                    }
                },
                "operationId": "post_commercial_carrier_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CommercialCarrier"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/commercial-carriers/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CommercialCarrier"
                        }
                    }
                },
                "operationId": "put_commercial_carrier_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/CommercialCarrier"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CommercialCarrier"
                        }
                    }
                },
                "operationId": "get_commercial_carrier_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, provider]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/contacts": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Contact"
                            }
                        }
                    }
                },
                "operationId": "get_contact_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, email, name, family_name, given_name, picture, gender, job_title, telephone, mobile, company_id, address_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [company, address, contact_projects, projects]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "type": "string",
                        "description": "Contact email"
                    },
                    {
                        "name": "given_name",
                        "in": "query",
                        "type": "string",
                        "description": "Contact person name"
                    },
                    {
                        "name": "family_name",
                        "in": "query",
                        "type": "string",
                        "description": "Contact person family name"
                    },
                    {
                        "name": "telephone",
                        "in": "query",
                        "type": "string",
                        "description": "telephone number"
                    },
                    {
                        "name": "job_title",
                        "in": "query",
                        "type": "string",
                        "description": "Job title"
                    },
                    {
                        "name": "address_id",
                        "in": "query",
                        "type": "string",
                        "description": "Address id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    }
                },
                "operationId": "post_contact_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/contacts/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_contact_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    }
                },
                "operationId": "put_contact_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Contact"
                        }
                    }
                },
                "operationId": "get_contact_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, email, name, family_name, given_name, picture, gender, job_title, telephone, mobile, company_id, address_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [company, address, contact_projects, projects]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/container-types": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/ContainerType"
                            }
                        }
                    }
                },
                "operationId": "get_container_type_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, size, size_units, image, instructions, url]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [samples, request_quantities, parameters, labs, allowed_media_types]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Container Type name"
                    },
                    {
                        "name": "size",
                        "in": "query",
                        "type": "number",
                        "description": "Container Type size"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ContainerType"
                        }
                    }
                },
                "operationId": "post_container_type_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ContainerType"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/container-types/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_container_type_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContainerType"
                        }
                    }
                },
                "operationId": "put_container_type_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ContainerType"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContainerType"
                        }
                    }
                },
                "operationId": "get_container_type_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, size, size_units, image, instructions, url]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [samples, request_quantities, parameters, labs, allowed_media_types]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/container-types/{id}.jpg": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_container_type_image_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContainerType"
                        }
                    }
                },
                "operationId": "put_container_type_image_by_id",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_container_type_image_by_id",
                "tags": [
                    "default"
                ]
            }
        },
        "/custody-transfers": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustodyTransfer"
                            }
                        }
                    }
                },
                "operationId": "get_custody_transfer_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, type, date_time, bar_code, notes, tracking_number, previous_id, next_id, sender_validation_id, receiver_validation_id, commercial_carrier_id, storage_location_id, next_transfer, sender_validation, receiver_validation]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [receiver_validation, sender_validation, previous_transfer, next_transfer, sample_deliveries, commercial_carrier, storage_location, custody_chains, field_tasks]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "bar_code",
                        "in": "query",
                        "type": "string",
                        "description": "Bar code of Custody-transfer"
                    },
                    {
                        "name": "field_event_id",
                        "in": "query",
                        "type": "string",
                        "description": "field_event_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/custody-transfers/sender-validate": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/CustodyTransfer"
                        }
                    }
                },
                "operationId": "post_custody_transfer_sender_validate",
                "parameters": [
                    {
                        "name": "selfie_image",
                        "in": "formData",
                        "type": "file",
                        "required": true,
                        "description": "Selfie Image"
                    },
                    {
                        "name": "signature_image",
                        "in": "formData",
                        "type": "file",
                        "required": true,
                        "description": "Signature Image"
                    },
                    {
                        "name": "sender_contact_id",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Sender contact id"
                    },
                    {
                        "name": "sample_delivery_ids",
                        "in": "query",
                        "type": "array",
                        "required": true,
                        "description": "Sample deliveries id",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "validation_type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Validation type",
                        "enum": [
                            "user",
                            "contact",
                            "offline"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "sample_delivery_status",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Sample delivery status",
                        "enum": [
                            "coc",
                            "inventory",
                            "lims"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Custody transfer type",
                        "enum": [
                            "transfer",
                            "shipment"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "receiver_contact_id",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Receiver contact id"
                    },
                    {
                        "name": "date_time",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Transfer Date time"
                    },
                    {
                        "name": "long",
                        "in": "query",
                        "type": "number",
                        "required": true,
                        "description": "Longitude"
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "type": "number",
                        "required": true,
                        "description": "Latitude"
                    },
                    {
                        "name": "notes",
                        "in": "query",
                        "type": "string",
                        "description": "notes"
                    },
                    {
                        "name": "commercial_carrier_id",
                        "in": "query",
                        "type": "string",
                        "description": "Commercial carrier id"
                    },
                    {
                        "name": "tracking_number",
                        "in": "query",
                        "type": "string",
                        "description": "Tracking number"
                    },
                    {
                        "name": "storage_location_id",
                        "in": "query",
                        "type": "string",
                        "description": "Storage location id"
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/custody-transfers/{custody_transfer_id}": {
            "parameters": [
                {
                    "name": "custody_transfer_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CustodyTransfer"
                        }
                    }
                },
                "operationId": "get_custody_transfer_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, type, date_time, bar_code, notes, tracking_number, previous_id, next_id, sender_validation_id, receiver_validation_id, commercial_carrier_id, storage_location_id, next_transfer, sender_validation, receiver_validation]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [receiver_validation, sender_validation, previous_transfer, next_transfer, sample_deliveries, commercial_carrier, storage_location, custody_chains, field_tasks]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/custody-transfers/{custody_transfer_id}/download": {
            "parameters": [
                {
                    "name": "custody_transfer_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_download_custody_transfer_details",
                "parameters": [
                    {
                        "name": "X-Timezone-Offset",
                        "in": "header",
                        "type": "string",
                        "description": "Timezone in (+0545) or (-0450) format"
                    },
                    {
                        "name": "timezone-offset",
                        "in": "query",
                        "type": "string",
                        "description": "Timezone in (+0545) or (-0450) format"
                    },
                    {
                        "name": "json",
                        "in": "query",
                        "type": "boolean",
                        "default": false
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/custody-transfers/{custody_transfer_id}/receiver-validate": {
            "parameters": [
                {
                    "name": "custody_transfer_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/CustodyTransfer"
                        }
                    }
                },
                "operationId": "put_custody_transfer_receiver_validation",
                "parameters": [
                    {
                        "name": "selfie_image",
                        "in": "formData",
                        "type": "file",
                        "required": true,
                        "description": "Selfie Image"
                    },
                    {
                        "name": "signature_image",
                        "in": "formData",
                        "type": "file",
                        "required": true,
                        "description": "Signature Image"
                    },
                    {
                        "name": "validation_type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Validation type",
                        "enum": [
                            "user",
                            "contact",
                            "offline"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "receiver_contact_id",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Receiver contact id"
                    },
                    {
                        "name": "date_time",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Transfer Date time"
                    },
                    {
                        "name": "long",
                        "in": "query",
                        "type": "number",
                        "required": true,
                        "description": "Longitude"
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Latitude"
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/custody-transfers/{custody_transfer_id}/receiver-validator/selfie.jpg": {
            "parameters": [
                {
                    "name": "custody_transfer_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_selfie_receiver_validator",
                "tags": [
                    "default"
                ]
            }
        },
        "/custody-transfers/{custody_transfer_id}/receiver-validator/signature.png": {
            "parameters": [
                {
                    "name": "custody_transfer_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_signature_receiver_validator",
                "tags": [
                    "default"
                ]
            }
        },
        "/custody-transfers/{custody_transfer_id}/sample_deliveries": {
            "parameters": [
                {
                    "name": "custody_transfer_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SampleDelivery"
                            }
                        }
                    }
                },
                "operationId": "get_custody_transfer_sample_delivery",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, status, notes, is_completed, field_task_id, lab_project_id, belong_to_id, collected_by_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [lab_project, custody_transfers, samples, field_task, belong_to, collected_by, checklists, custody_chain, has_duplicate, has_blank, has_ms, has_msd]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "array",
                        "description": "('coc', 'inventory', 'lims')",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "field_task_id",
                        "in": "query",
                        "type": "string",
                        "description": "Field task id"
                    },
                    {
                        "name": "lab_project_id",
                        "in": "query",
                        "type": "string",
                        "description": "lab project id"
                    },
                    {
                        "name": "collected_by_id",
                        "in": "query",
                        "type": "string",
                        "description": "Collected by"
                    },
                    {
                        "name": "belong_to_id",
                        "in": "query",
                        "type": "string",
                        "description": " Belong to"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/custody-transfers/{custody_transfer_id}/sender-validator/selfie.jpg": {
            "parameters": [
                {
                    "name": "custody_transfer_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_selfie_sender_validator",
                "tags": [
                    "default"
                ]
            }
        },
        "/custody-transfers/{custody_transfer_id}/sender-validator/signature.png": {
            "parameters": [
                {
                    "name": "custody_transfer_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_signature_sender_validator",
                "tags": [
                    "default"
                ]
            }
        },
        "/data-entry/coc-forms/download": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_data_entry_coc_form_download",
                "parameters": [
                    {
                        "name": "field_event_id",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Field Event Id"
                    },
                    {
                        "name": "X-Timezone-Offset",
                        "in": "header",
                        "type": "string",
                        "description": "Timezone in (+0545) or (-0450) format"
                    },
                    {
                        "name": "timezone-offset",
                        "in": "query",
                        "type": "string",
                        "description": "Timezone in (+0545) or (-0450) format"
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/data-entry/forms/download": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_data_entry_download_forms",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Form types",
                        "enum": [
                            "gauging",
                            "sampling",
                            "all"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "field_event_id",
                        "in": "query",
                        "type": "string",
                        "description": "Field Event Id"
                    },
                    {
                        "name": "X-Timezone-Offset",
                        "in": "header",
                        "type": "string",
                        "description": "Timezone in (+0545) or (-0450) format"
                    },
                    {
                        "name": "timezone-offset",
                        "in": "query",
                        "type": "string",
                        "description": "Timezone in (+0545) or (-0450) format"
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/drinking-waters": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/DrinkingWater"
                            }
                        }
                    }
                },
                "operationId": "get_drinking_water_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, location_id, field_event_id, address_id, public_water_system_name, pws_id, pws_owner_phone, type_of_supply, reason, water_sources, license, created_by, created_at, deleted_by, deleted_at]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [location, field_event, address]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "field_event_id",
                        "in": "query",
                        "type": "string",
                        "description": "Field Event Id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/DrinkingWater"
                        }
                    }
                },
                "operationId": "post_drinking_water_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DrinkingWater"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/drinking-waters/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_drinking_water_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DrinkingWater"
                        }
                    }
                },
                "operationId": "put_drinking_water_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/DrinkingWater"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/DrinkingWater"
                        }
                    }
                },
                "operationId": "get_drinking_water_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, location_id, field_event_id, address_id, public_water_system_name, pws_id, pws_owner_phone, type_of_supply, reason, water_sources, license, created_by, created_at, deleted_by, deleted_at]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [location, field_event, address]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/elevation-graph": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ReportBlockGraph"
                        }
                    }
                },
                "operationId": "post_elevation_graph",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ReportBlockGraph"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/enum": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_enum_list",
                "parameters": [
                    {
                        "name": "enum_fields",
                        "in": "query",
                        "type": "string",
                        "description": "Enum Fields",
                        "enum": [
                            "CleanupCriteriaType",
                            "ContainerRequestStatus",
                            "ContainerShipmentStatus",
                            "CustodyTransferType",
                            "DeliveryStatus",
                            "EquipmentType",
                            "SampleStatus",
                            "FieldTaskStatus",
                            "FieldEventStatus",
                            "FieldTaskType",
                            "SubstanceForm",
                            "LabRole",
                            "LengthUnit",
                            "LocationType",
                            "InvitationType",
                            "OrganizationType",
                            "ProjectRole",
                            "ReportFilterType",
                            "ReportType",
                            "SampleTestType",
                            "SampleType",
                            "SiteDataType",
                            "SiteMapType",
                            "SubstanceUnit",
                            "TransferValidationType",
                            "TransferValidationStatus",
                            "TubingType",
                            "UserStatus",
                            "VolumeUnit",
                            "WellGaugeType",
                            "WeatherType",
                            "WindDirection",
                            "WorkspaceRole",
                            "EquipmentModel",
                            "PumpModel",
                            "MeterModel",
                            "DrinkingWaterSources",
                            "DrinkingWaterTypeOfSupply",
                            "DrinkingWaterReason"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/equipment-calibrations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/EquipmentCalibration"
                            }
                        }
                    }
                },
                "operationId": "get_equipment_calibration_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, date_time, notes, equipment_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [equipment]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "date_time",
                        "in": "query",
                        "type": "string",
                        "description": "Calibration datetime"
                    },
                    {
                        "name": "notes",
                        "in": "query",
                        "type": "string",
                        "description": "Calibration note"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/EquipmentCalibration"
                        }
                    }
                },
                "operationId": "post_equipment_calibration_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/EquipmentCalibration"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/equipment-calibrations/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_equipment_calibration_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EquipmentCalibration"
                        }
                    }
                },
                "operationId": "put_equipment_calibration_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/EquipmentCalibration"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/EquipmentCalibration"
                        }
                    }
                },
                "operationId": "get_equipment_calibration_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, date_time, notes, equipment_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [equipment]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/equipments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Equipment"
                            }
                        }
                    }
                },
                "operationId": "get_equipment_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, type, model, serial, notes, cell_size]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [calibrations]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "description": "Equipment type",
                        "enum": [
                            "pump",
                            "meter"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "model",
                        "in": "query",
                        "type": "string",
                        "description": "Equipment model"
                    },
                    {
                        "name": "serial",
                        "in": "query",
                        "type": "string",
                        "description": "Equipment serial"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                },
                "operationId": "post_equipment_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/equipments/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_equipment_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                },
                "operationId": "put_equipment_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Equipment"
                        }
                    }
                },
                "operationId": "get_equipment_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, type, model, serial, notes, cell_size]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [calibrations]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-data-graph": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ReportBlockGraph"
                        }
                    }
                },
                "operationId": "post_field_data_graph",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ReportBlockGraph"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-events": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FieldEvent"
                            }
                        }
                    }
                },
                "operationId": "get_field_event_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, sampling_date, status, media_type, site_id, lab_project_id, lab_id, shipping_contact_id, gauge_task_count, sample_task_count]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [site, lab_project, lab_projects, lab, shipping_contact, field_tasks, assignees, container_requests, field_event_tests, drinking_water, equipment_blank_tests, equipment_blank_tasks, trip_blank_tasks, trip_blank_tests, organization_profile, field_blank_tasks, gauge_task_count, field_blank_tests, sample_task_count, client]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "type": "string",
                        "description": "User email"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "string",
                        "description": "Field event status",
                        "enum": [
                            "open",
                            "in progress",
                            "completed"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "sampling_date",
                        "in": "query",
                        "type": "string",
                        "description": "Field event Sampling data"
                    },
                    {
                        "name": "assignee_id",
                        "in": "query",
                        "type": "string",
                        "description": "Field event assigned user id"
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "type": "string",
                        "description": "Field event site id"
                    },
                    {
                        "name": "lab_id",
                        "in": "query",
                        "type": "string",
                        "description": "Field event lab id"
                    },
                    {
                        "name": "media_type",
                        "in": "query",
                        "type": "string",
                        "description": "Field event media type"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/FieldEvent"
                        }
                    }
                },
                "operationId": "post_field_event_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FieldEvent"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-events/{field_event_id}/bottle-labels/download": {
            "parameters": [
                {
                    "name": "field_event_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_download_bottle_labels",
                "tags": [
                    "default"
                ]
            }
        },
        "/field-events/{field_event_id}/bottle-request-forms/download": {
            "parameters": [
                {
                    "name": "field_event_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_download_bottle_request_forms",
                "tags": [
                    "default"
                ]
            }
        },
        "/field-events/{field_event_id}/custody-transfers": {
            "parameters": [
                {
                    "name": "field_event_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustodyTransfer"
                            }
                        }
                    }
                },
                "operationId": "get_field_event_custody_transfer_list",
                "parameters": [
                    {
                        "name": "field_event_id",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "description": "field_event_id"
                    },
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, type, date_time, bar_code, notes, tracking_number, previous_id, next_id, sender_validation_id, receiver_validation_id, commercial_carrier_id, storage_location_id, next_transfer, sender_validation, receiver_validation]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [receiver_validation, sender_validation, previous_transfer, next_transfer, sample_deliveries, commercial_carrier, storage_location, custody_chains, field_tasks]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "bar_code",
                        "in": "query",
                        "type": "string",
                        "description": "Bar code of Custody-transfer"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-events/{field_event_id}/forms/download": {
            "parameters": [
                {
                    "name": "field_event_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_download_forms",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Form types",
                        "enum": [
                            "gauging",
                            "sampling",
                            "all"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "X-Timezone-Offset",
                        "in": "header",
                        "type": "string",
                        "description": "Timezone in (+0545) or (-0450) format"
                    },
                    {
                        "name": "timezone-offset",
                        "in": "query",
                        "type": "string",
                        "description": "Timezone in (+0545) or (-0450) format"
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-events/{field_event_id}/qr-bar-code/download": {
            "parameters": [
                {
                    "name": "field_event_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_download_bar_codes",
                "parameters": [
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Form types",
                        "enum": [
                            "bar code",
                            "qr code"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-events/{field_event_id}/sample-deliveries": {
            "parameters": [
                {
                    "name": "field_event_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SampleDelivery"
                            }
                        }
                    }
                },
                "operationId": "get_lab_sample_delivery",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, status, notes, is_completed, field_task_id, lab_project_id, belong_to_id, collected_by_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [lab_project, custody_transfers, samples, field_task, belong_to, collected_by, checklists, custody_chain, has_duplicate, has_blank, has_ms, has_msd]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "array",
                        "description": "('coc', 'inventory', 'lims')",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "field_task_id",
                        "in": "query",
                        "type": "string",
                        "description": "Field task id"
                    },
                    {
                        "name": "lab_project_id",
                        "in": "query",
                        "type": "string",
                        "description": "lab project id"
                    },
                    {
                        "name": "collected_by_id",
                        "in": "query",
                        "type": "string",
                        "description": "Collected by"
                    },
                    {
                        "name": "belong_to_id",
                        "in": "query",
                        "type": "string",
                        "description": " Belong to"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-events/{field_event_id}/workspace-report/download": {
            "parameters": [
                {
                    "name": "field_event_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_download_workspace_report",
                "tags": [
                    "default"
                ]
            }
        },
        "/field-events/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_field_event_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FieldEvent"
                        }
                    }
                },
                "operationId": "put_field_event_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FieldEvent"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FieldEvent"
                        }
                    }
                },
                "operationId": "get_field_event_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, sampling_date, status, media_type, site_id, lab_project_id, lab_id, shipping_contact_id, gauge_task_count, sample_task_count]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [site, lab_project, lab_projects, lab, shipping_contact, field_tasks, assignees, container_requests, field_event_tests, drinking_water, equipment_blank_tests, equipment_blank_tasks, trip_blank_tasks, trip_blank_tests, organization_profile, field_blank_tasks, gauge_task_count, field_blank_tests, sample_task_count, client]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-events/{id}/assignees": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FieldEvent"
                        }
                    }
                },
                "operationId": "put_field_event_assignees",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FieldEvent"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-events/{id}/clone": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/FieldEvent"
                        }
                    }
                },
                "operationId": "post_field_event_clone",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FieldEvent"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-events/{id}/field-task": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "responses": {
                    "201": {
                        "description": "Created"
                    }
                },
                "operationId": "post_field_event_field_task",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FieldEventTaskSchema"
                        }
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-events/{id}/field-tasks": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FieldEvent"
                        }
                    }
                },
                "operationId": "put_field_event_tasks",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FieldEvent"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-events/{id}/tests": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FieldEvent"
                        }
                    }
                },
                "operationId": "put_field_event_test",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FieldEvent"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-tasks": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FieldTask"
                            }
                        }
                    }
                },
                "operationId": "get_field_task_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, status, type, notes, selfie, signature, collected_lat, collected_long, collected_date_time, collected_by_id, field_equipment_id, location_id, well_gauge_id, field_event_id, depth_id, sampling_method_id, signature_url, name, is_sample, is_gauge, selfie_url]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [collected_by, depth, field_task_tests, samples, location, well_gauge, field_event, sampling_method, sample_deliveries, field_equipment, duplicate_task_tests, ms_msd_task_tests, signature_url, name, duplicate_tests, previously_collected_info, ms_msd_tests, sample_container_counts, is_sample, is_gauge, sample_count, total_contamination, selfie_url]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "array",
                        "description": "Field task status ('open', 'in_progress', 'completed', 'unable')",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi",
                        "enum": [
                            "open",
                            "in_progress",
                            "completed",
                            "unable"
                        ]
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "description": "Field task type",
                        "enum": [
                            "field_blank",
                            "equipment_blank",
                            "trip_blank",
                            "sample",
                            "gauge"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "notes",
                        "in": "query",
                        "type": "string",
                        "description": "Field task note"
                    },
                    {
                        "name": "field_event_id",
                        "in": "query",
                        "type": "string",
                        "description": "Field task field_event_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/FieldTask"
                        }
                    }
                },
                "operationId": "post_field_task_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FieldTask"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-tasks/{field_task_id}/field-equipments": {
            "parameters": [
                {
                    "name": "field_task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/FieldEquipment"
                            }
                        }
                    }
                },
                "operationId": "get_field_equipment_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, pump_placement, tubing_length, tubing_length_units, tubing_diameter, tubing_diameter_units, tubing_type, notes, field_task_id, pump_id, meter_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [pump, meter, field_task]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Image name"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/FieldEquipment"
                        }
                    }
                },
                "operationId": "post_field_equipment_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FieldEquipment"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-tasks/{field_task_id}/field-equipments/{field_equipment_id}": {
            "parameters": [
                {
                    "name": "field_task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "field_equipment_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_field_equipment_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FieldEquipment"
                        }
                    }
                },
                "operationId": "put_field_equipment_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FieldEquipment"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FieldEquipment"
                        }
                    }
                },
                "operationId": "get_field_equipment_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, pump_placement, tubing_length, tubing_length_units, tubing_diameter, tubing_diameter_units, tubing_type, notes, field_task_id, pump_id, meter_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [pump, meter, field_task]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-tasks/{field_task_id}/sample-deliveries": {
            "parameters": [
                {
                    "name": "field_task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_field_task_sample_deliveries",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SampleDelivery"
                        }
                    }
                },
                "operationId": "get_field_task_sample_deliveries",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, status, notes, is_completed, field_task_id, lab_project_id, belong_to_id, collected_by_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [lab_project, custody_transfers, samples, field_task, belong_to, collected_by, checklists, custody_chain, has_duplicate, has_blank, has_ms, has_msd]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-tasks/{field_task_id}/samples/collect": {
            "parameters": [
                {
                    "name": "field_task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FieldTask"
                        }
                    }
                },
                "operationId": "put_field_task_sample_collect",
                "parameters": [
                    {
                        "name": "selfie",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    },
                    {
                        "name": "signature",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    },
                    {
                        "name": "collected_lat",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Collected latitude"
                    },
                    {
                        "name": "collected_long",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Collected longitude"
                    },
                    {
                        "name": "collected_by_id",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Collected by user id"
                    },
                    {
                        "name": "collected_date_time",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Collected Date And Time"
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-tasks/{field_task_id}/selfie.jpg": {
            "parameters": [
                {
                    "name": "field_task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_field_task_sample_selfie",
                "tags": [
                    "default"
                ]
            }
        },
        "/field-tasks/{field_task_id}/signature.png": {
            "parameters": [
                {
                    "name": "field_task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_field_task_sample_signature",
                "tags": [
                    "default"
                ]
            }
        },
        "/field-tasks/{field_task_id}/tests/{test_id}/samples": {
            "parameters": [
                {
                    "name": "field_task_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "test_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Sample"
                        }
                    }
                },
                "operationId": "post_field_task_sample",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Sample"
                        }
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/field-tasks/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_field_task_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FieldTask"
                        }
                    }
                },
                "operationId": "put_field_task_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/FieldTask"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/FieldTask"
                        }
                    }
                },
                "operationId": "get_field_task_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, status, type, notes, selfie, signature, collected_lat, collected_long, collected_date_time, collected_by_id, field_equipment_id, location_id, well_gauge_id, field_event_id, depth_id, sampling_method_id, signature_url, name, is_sample, is_gauge, selfie_url]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [collected_by, depth, field_task_tests, samples, location, well_gauge, field_event, sampling_method, sample_deliveries, field_equipment, duplicate_task_tests, ms_msd_task_tests, signature_url, name, duplicate_tests, previously_collected_info, ms_msd_tests, sample_container_counts, is_sample, is_gauge, sample_count, total_contamination, selfie_url]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/generic-tests": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Test"
                            }
                        }
                    }
                },
                "operationId": "get_generic_test_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, preservative, test_method_id, lab_id, parent_test_id, method]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [test_method, field_event_tests, media_types, regions, substances, test_lab_containers, lab, parent_test, child_tests, field_events, field_tasks]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Test name"
                    },
                    {
                        "name": "media_types",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests according to a media type"
                    },
                    {
                        "name": "preservative",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests by preservative"
                    },
                    {
                        "name": "parent_test_id",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests according to a parent test"
                    },
                    {
                        "name": "test_method_id",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests by test method id"
                    },
                    {
                        "name": "lab_id",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests according to a lab"
                    },
                    {
                        "name": "region_id",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests according by region"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/invitation-tokens/{token}": {
            "parameters": [
                {
                    "name": "token",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Invitation"
                        }
                    }
                },
                "operationId": "put_accepted_invitation",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Invitation"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/lab/{lab_id}/sample_deliveries": {
            "parameters": [
                {
                    "name": "lab_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SampleDelivery"
                            }
                        }
                    }
                },
                "operationId": "get_lab_sample_delivery",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, status, notes, is_completed, field_task_id, lab_project_id, belong_to_id, collected_by_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [lab_project, custody_transfers, samples, field_task, belong_to, collected_by, checklists, custody_chain, has_duplicate, has_blank, has_ms, has_msd]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "array",
                        "description": "('coc', 'inventory', 'lims')",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "field_task_id",
                        "in": "query",
                        "type": "string",
                        "description": "Field task id"
                    },
                    {
                        "name": "lab_project_id",
                        "in": "query",
                        "type": "string",
                        "description": "lab project id"
                    },
                    {
                        "name": "collected_by_id",
                        "in": "query",
                        "type": "string",
                        "description": "Collected by"
                    },
                    {
                        "name": "belong_to_id",
                        "in": "query",
                        "type": "string",
                        "description": " Belong to"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Lab"
                            }
                        }
                    }
                },
                "operationId": "get_lab_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, is_default, is_verified, address_id, organization_id, default_contact_id, lims_id, is_lims_verified, agency, slug]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [address, organization, lab_projects, projects, container_types, container_additives, field_events, tests, container_requests, default_contact, sub_domain, clients, workspaces, lims, user_lab_roles, users, default_checklists]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "type": "string",
                        "description": "Lab organization_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Lab"
                        }
                    }
                },
                "operationId": "post_lab_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Lab"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_lab_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Lab"
                        }
                    }
                },
                "operationId": "put_lab_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Lab"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Lab"
                        }
                    }
                },
                "operationId": "get_lab_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, is_default, is_verified, address_id, organization_id, default_contact_id, lims_id, is_lims_verified, agency, slug]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [address, organization, lab_projects, projects, container_types, container_additives, field_events, tests, container_requests, default_contact, sub_domain, clients, workspaces, lims, user_lab_roles, users, default_checklists]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs/{lab_id}/checklists": {
            "parameters": [
                {
                    "name": "lab_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Checklist"
                            }
                        }
                    }
                },
                "operationId": "get_checklist_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, lab_id, sample_delivery_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [lab, sample_delivery, items]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Checklist"
                        }
                    }
                },
                "operationId": "post_checklist_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Checklist"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs/{lab_id}/clients": {
            "parameters": [
                {
                    "name": "lab_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganizationProfile"
                            }
                        }
                    }
                },
                "operationId": "get_lab_client_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, website, domain_name, organization_id, address_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [organization, address, workspaces, projects, client_workspaces, client_labs]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile name"
                    },
                    {
                        "name": "website",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile website"
                    },
                    {
                        "name": "domain_name",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile domain name"
                    },
                    {
                        "name": "organisation_id",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile organisation_id"
                    },
                    {
                        "name": "address_id",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile address_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/OrganizationProfile"
                        }
                    }
                },
                "operationId": "post_lab_client_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OrganizationProfile"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs/{lab_id}/clients/{client_id}": {
            "parameters": [
                {
                    "name": "lab_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "client_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_lab_client_list_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs/{lab_id}/custody-transfers": {
            "parameters": [
                {
                    "name": "lab_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustodyTransfer"
                            }
                        }
                    }
                },
                "operationId": "get_lab_custody_transfer",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, type, date_time, bar_code, notes, tracking_number, previous_id, next_id, sender_validation_id, receiver_validation_id, commercial_carrier_id, storage_location_id, next_transfer, sender_validation, receiver_validation]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [receiver_validation, sender_validation, previous_transfer, next_transfer, sample_deliveries, commercial_carrier, storage_location, custody_chains, field_tasks]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "bar_code",
                        "in": "query",
                        "type": "string",
                        "description": "Bar code of Custody-transfer"
                    },
                    {
                        "name": "field_event_id",
                        "in": "query",
                        "type": "string",
                        "description": "field_event_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs/{lab_id}/invitations": {
            "parameters": [
                {
                    "name": "lab_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Invitation"
                            }
                        }
                    }
                },
                "operationId": "get_lab_invitation_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, token, token_is_used, type, user_lab_role_id, user_project_role_id, user_workspace_role_id, is_new_user, created_by, datetime]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [lab_role, project_role, workspace_role, user]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Invitation"
                            }
                        }
                    }
                },
                "operationId": "post_lab_invitation_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs/{lab_id}/invitations/{invitation_id}": {
            "parameters": [
                {
                    "name": "lab_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "invitation_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_lab_invitation_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs/{lab_id}/lab-projects": {
            "parameters": [
                {
                    "name": "lab_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LabProject"
                            }
                        }
                    }
                },
                "operationId": "get_lab_project_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, notes, cancelled, order_number, turn_around_time, note_to_lab, lab_id, field_event_id, postal_address_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [lab, field_event, field_events, sample_deliveries, postal_address, organization_profile, all_field_events, organization_profiles, client]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/LabProject"
                        }
                    }
                },
                "operationId": "post_lab_project_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/LabProject"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs/{lab_id}/lab-projects/{lab_project_id}": {
            "parameters": [
                {
                    "name": "lab_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "lab_project_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LabProject"
                        }
                    }
                },
                "operationId": "put_lab_project_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/LabProject"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs/{lab_id}/related-clients": {
            "parameters": [
                {
                    "name": "lab_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganizationProfile"
                            }
                        }
                    }
                },
                "operationId": "get_related_lab_client_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, website, domain_name, organization_id, address_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [organization, address, workspaces, projects, client_workspaces, client_labs]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile name"
                    },
                    {
                        "name": "website",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile website"
                    },
                    {
                        "name": "domain_name",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile domain name"
                    },
                    {
                        "name": "organisation_id",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile organisation_id"
                    },
                    {
                        "name": "address_id",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile address_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs/{lab_id}/tests": {
            "parameters": [
                {
                    "name": "lab_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Test"
                            }
                        }
                    }
                },
                "operationId": "get_lab_test_list",
                "parameters": [
                    {
                        "name": "lab_id",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "description": "Filter tests according to a lab"
                    },
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, preservative, test_method_id, lab_id, parent_test_id, method]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [test_method, field_event_tests, media_types, regions, substances, test_lab_containers, lab, parent_test, child_tests, field_events, field_tasks]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Test name"
                    },
                    {
                        "name": "media_types",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests according to a media type"
                    },
                    {
                        "name": "preservative",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests by preservative"
                    },
                    {
                        "name": "parent_test_id",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests according to a parent test"
                    },
                    {
                        "name": "test_method_id",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests by test method id"
                    },
                    {
                        "name": "region_id",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests according by region"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs/{lab_id}/users": {
            "parameters": [
                {
                    "name": "lab_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserLabRole"
                            }
                        }
                    }
                },
                "operationId": "get_lab_user_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, user_id, lab_id, role]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [user, lab, invitation]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "type": "string",
                        "description": "Role name",
                        "enum": [
                            "owner",
                            "admin",
                            "lab_technician",
                            "lab_courier",
                            "lab_manager"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "type": "string",
                        "description": "User id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/UserLabRole"
                        }
                    }
                },
                "operationId": "post_lab_user_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserLabRole"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs/{lab_id}/users/{user_id}": {
            "parameters": [
                {
                    "name": "lab_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_project_user_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserLabRole"
                        }
                    }
                },
                "operationId": "put_project_user_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserLabRole"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserLabRole"
                        }
                    }
                },
                "operationId": "get_project_user_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, user_id, lab_id, role]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [user, lab, invitation]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/labs/{lab_id}/workspaces": {
            "parameters": [
                {
                    "name": "lab_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Workspace"
                            }
                        }
                    }
                },
                "operationId": "get_lab_workspace_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [_created_at, _updated_at, name, id, organization_info, organization_id, payment_id, organization_profile_id, is_demo_workspace, slug]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [payment, organization, companies, organization_profile, projects, clients, sub_domain, labs, user_workspace_roles, users]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Workspace name"
                    },
                    {
                        "name": "organization_info",
                        "in": "query",
                        "type": "string",
                        "description": "Workspace organization info"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "type": "string",
                        "description": "Workspace organization_id"
                    },
                    {
                        "name": "payment_id",
                        "in": "query",
                        "type": "string",
                        "description": "Workspace payment_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/locations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Location"
                            }
                        }
                    }
                },
                "operationId": "get_location_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, lat, long, name, type, water_disposal, notes, site_id, lab_notes, lab_hold]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [site, field_tasks, well_gauges, drinking_waters, locations_info, depths, images, results, site_maps_coordinates, construction_well_gauges, well_screen_length, well_toc, latest_well_gauge, well_diameter, well_material, construction_info, well_depth_to_bottom, total_contamination, latest_sample_results]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "description": "Location type",
                        "enum": [
                            "well",
                            "soil",
                            "drinking_water"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "lat",
                        "in": "query",
                        "type": "number",
                        "description": "Location long"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Location name"
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "type": "string",
                        "description": "Location site_id"
                    },
                    {
                        "name": "water_disposal",
                        "in": "query",
                        "type": "string",
                        "description": "Water disposal",
                        "enum": [
                            "Pour on ground",
                            "Place in container",
                            "Other"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    }
                },
                "operationId": "post_location_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/locations-info": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LocationsInfo"
                            }
                        }
                    }
                },
                "operationId": "get_locations_info_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, location_id, building_id, building_name, sample_location_description, fixture_type, sample_type, sample_volume, chlorine_residual, ph, chlorine_type, created_by, created_at, deleted_by, deleted_at]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [location]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/LocationsInfo"
                        }
                    }
                },
                "operationId": "post_locations_info_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/LocationsInfo"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/locations-info/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_locations_info_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LocationsInfo"
                        }
                    }
                },
                "operationId": "put_locations_info_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/LocationsInfo"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LocationsInfo"
                        }
                    }
                },
                "operationId": "get_locations_info_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, location_id, building_id, building_name, sample_location_description, fixture_type, sample_type, sample_volume, chlorine_residual, ph, chlorine_type, created_by, created_at, deleted_by, deleted_at]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [location]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/locations/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_location_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    }
                },
                "operationId": "put_location_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Location"
                        }
                    }
                },
                "operationId": "get_location_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, lat, long, name, type, water_disposal, notes, site_id, lab_notes, lab_hold]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [site, field_tasks, well_gauges, drinking_waters, locations_info, depths, images, results, site_maps_coordinates, construction_well_gauges, well_screen_length, well_toc, latest_well_gauge, well_diameter, well_material, construction_info, well_depth_to_bottom, total_contamination, latest_sample_results]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/locations/{id}/images": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/LocationImage"
                            }
                        }
                    }
                },
                "operationId": "get_location_image_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, bucket, location_id, url, last_modified, size, content_type]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [location]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Image name"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/LocationImage"
                        }
                    }
                },
                "operationId": "post_location_image_list",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/locations/{id}/images/{image_id}.jpg": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "image_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_location_image_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/LocationImage"
                        }
                    }
                },
                "operationId": "put_location_image_by_id",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_location_image_by_id",
                "tags": [
                    "default"
                ]
            }
        },
        "/notification/email": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                },
                "operationId": "post_email_notification",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/notification/{notification_id}": {
            "parameters": [
                {
                    "name": "notification_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Notification"
                        }
                    }
                },
                "operationId": "put_user_notification",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "type": "string",
                        "description": "Notification Status",
                        "enum": [
                            "pending",
                            "seen"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/organization-profiles": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganizationProfile"
                            }
                        }
                    }
                },
                "operationId": "get_organization_profile_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, website, domain_name, organization_id, address_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [organization, address, workspaces, projects, client_workspaces, client_labs]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile name"
                    },
                    {
                        "name": "website",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile website"
                    },
                    {
                        "name": "domain_name",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile domain name"
                    },
                    {
                        "name": "organisation_id",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile organisation_id"
                    },
                    {
                        "name": "address_id",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile address_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/OrganizationProfile"
                        }
                    }
                },
                "operationId": "post_organization_profile_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OrganizationProfile"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/organization-profiles/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_organization_profile_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OrganizationProfile"
                        }
                    }
                },
                "operationId": "put_organization_profile_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OrganizationProfile"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/OrganizationProfile"
                        }
                    }
                },
                "operationId": "get_organization_profile_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, website, domain_name, organization_id, address_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [organization, address, workspaces, projects, client_workspaces, client_labs]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/organizations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Organization"
                            }
                        }
                    }
                },
                "operationId": "get_organization_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, type]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [companies, workspaces, profiles, labs]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Organization name"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "description": "Organization type",
                        "enum": [
                            "consultant",
                            "company",
                            "lab"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Organization"
                        }
                    }
                },
                "operationId": "post_organization_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Organization"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/organizations/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_organization_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Organization"
                        }
                    }
                },
                "operationId": "put_organization_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Organization"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Organization"
                        }
                    }
                },
                "operationId": "get_organization_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, type]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [companies, workspaces, profiles, labs]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/payments": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Payment"
                            }
                        }
                    }
                },
                "operationId": "get_payment_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, method, token]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "type": "string",
                        "description": "Payment method"
                    },
                    {
                        "name": "token",
                        "in": "query",
                        "type": "string",
                        "description": "Payment token"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    }
                },
                "operationId": "post_payment_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/payments/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_payment_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    }
                },
                "operationId": "put_payment_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Payment"
                        }
                    }
                },
                "operationId": "get_payment_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, method, token]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/profile": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_profile",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/profile/user": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "operationId": "get_profile_user",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [_created_at, _updated_at, id, openid_url, email, status, role, profile_last_updated, email_verified, contact_id, user_profile]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [contact, collected_samples, field_events, user_registration_devices, user_project_roles, user_workspace_roles, user_lab_roles, labs, workspaces, projects]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/projects": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    }
                },
                "operationId": "get_project_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [lab_contact_id, _created_at, _updated_at, id, name, region_id, workspace_id, client_id, lab_id, media_type, is_demo_project]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [sites, reports, region, cas_project_names, lab_contact, contact_projects, workspace, client, lab, user_project_roles, users, invitations, field_events]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Project name"
                    },
                    {
                        "name": "workspace_id",
                        "in": "query",
                        "type": "string",
                        "description": "Project workspace_id"
                    },
                    {
                        "name": "region_id",
                        "in": "query",
                        "type": "string",
                        "description": "Project region_id"
                    },
                    {
                        "name": "media_type",
                        "in": "query",
                        "type": "string",
                        "description": "Media Type"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                },
                "operationId": "post_project_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/projects/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_project_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                },
                "operationId": "put_project_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Project"
                        }
                    }
                },
                "operationId": "get_project_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [lab_contact_id, _created_at, _updated_at, id, name, region_id, workspace_id, client_id, lab_id, media_type, is_demo_project]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [sites, reports, region, cas_project_names, lab_contact, contact_projects, workspace, client, lab, user_project_roles, users, invitations, field_events]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/projects/{project_id}/contacts": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ContactProject"
                        }
                    }
                },
                "operationId": "post_project_contact_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ContactProject"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/projects/{project_id}/contacts/{contact_id}": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "contact_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_contact_project_item",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/ContactProject"
                        }
                    }
                },
                "operationId": "put_contact_project_item",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ContactProject"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/projects/{project_id}/invitations": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Invitation"
                            }
                        }
                    }
                },
                "operationId": "get_project_invitation_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, token, token_is_used, type, user_lab_role_id, user_project_role_id, user_workspace_role_id, is_new_user, created_by, datetime]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [lab_role, project_role, workspace_role, user]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Invitation"
                            }
                        }
                    }
                },
                "operationId": "post_project_invitation_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/projects/{project_id}/invitations/{invitation_id}": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "invitation_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_project_invitation_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/projects/{project_id}/users": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserProjectRole"
                            }
                        }
                    }
                },
                "operationId": "get_project_user_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, user_id, project_id, role]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [user, project, invitation]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "type": "string",
                        "description": "Role name",
                        "enum": [
                            "owner",
                            "admin",
                            "member",
                            "lab_manager",
                            "lab_associate"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "type": "string",
                        "description": "User id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/UserProjectRole"
                        }
                    }
                },
                "operationId": "post_project_user_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserProjectRole"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/projects/{project_id}/users/{user_id}": {
            "parameters": [
                {
                    "name": "project_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_project_user_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserProjectRole"
                        }
                    }
                },
                "operationId": "put_project_user_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserProjectRole"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserProjectRole"
                        }
                    }
                },
                "operationId": "get_project_user_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, user_id, project_id, role]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [user, project, invitation]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/regions": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Region"
                            }
                        }
                    }
                },
                "operationId": "get_region_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, abbr, type]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [cleanup_criterias, dialects]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "description": "Region type",
                        "enum": [
                            "state"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/regions/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Region"
                        }
                    }
                },
                "operationId": "get_region_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, abbr, type]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [cleanup_criterias, dialects]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/reports/field-table": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ReportBlockGraph"
                        }
                    }
                },
                "operationId": "post_field_table_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ReportBlockGraph"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/reports/soil-analytical-tables": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SoilAnalyticalTableSchema"
                        }
                    }
                },
                "operationId": "get_soil_analytics_table",
                "parameters": [
                    {
                        "name": "location_ids",
                        "in": "query",
                        "type": "array",
                        "required": true,
                        "description": "UUID",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "criteria_id",
                        "in": "query",
                        "type": "string",
                        "description": "Cleanup criteria id(UUID)"
                    },
                    {
                        "name": "selected_dates",
                        "in": "query",
                        "type": "array",
                        "required": true,
                        "description": "Sample collected dates (yyyy-mm-dd)",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Site id (UUID)"
                    },
                    {
                        "name": "substance_ids",
                        "in": "query",
                        "type": "array",
                        "required": true,
                        "description": "List of substance ids (UUID)",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Unit (ppb|ppt|ppm)",
                        "enum": [
                            "ppb",
                            "ppt",
                            "ppm"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/reports/well-data": {
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/ReportBlockGraph"
                        }
                    }
                },
                "operationId": "post_well_data_resource",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/ReportBlockGraph"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sample-deliveries": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SampleDelivery"
                            }
                        }
                    }
                },
                "operationId": "get_sample_delivery_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, status, notes, is_completed, field_task_id, lab_project_id, belong_to_id, collected_by_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [lab_project, custody_transfers, samples, field_task, belong_to, collected_by, checklists, custody_chain, has_duplicate, has_blank, has_ms, has_msd]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "array",
                        "description": "('coc', 'inventory', 'lims')",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "field_task_id",
                        "in": "query",
                        "type": "string",
                        "description": "Field task id"
                    },
                    {
                        "name": "lab_project_id",
                        "in": "query",
                        "type": "string",
                        "description": "lab project id"
                    },
                    {
                        "name": "collected_by_id",
                        "in": "query",
                        "type": "string",
                        "description": "Collected by"
                    },
                    {
                        "name": "belong_to_id",
                        "in": "query",
                        "type": "string",
                        "description": " Belong to"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/SampleDelivery"
                        }
                    }
                },
                "operationId": "post_sample_delivery_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SampleDelivery"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sample-deliveries/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SampleDelivery"
                        }
                    }
                },
                "operationId": "put_container_type_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SampleDelivery"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SampleDelivery"
                        }
                    }
                },
                "operationId": "get_container_type_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, status, notes, is_completed, field_task_id, lab_project_id, belong_to_id, collected_by_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [lab_project, custody_transfers, samples, field_task, belong_to, collected_by, checklists, custody_chain, has_duplicate, has_blank, has_ms, has_msd]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sample-delivery/{sample_delivery_id}/samples": {
            "parameters": [
                {
                    "name": "sample_delivery_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Sample"
                            }
                        }
                    }
                },
                "operationId": "get_sampledelivery_sample",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, sampling_date, sampling_time, is_delivered, has_problem, notes, type, status, bar_code, test_type, container_type_id, test_id, field_task_id, collected_by_id, sample_delivery_id, total_contamination]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [collected_by, container_type, field_task, results, sample_delivery, test, total_contamination]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "sampling_date",
                        "in": "query",
                        "type": "string",
                        "description": "Sample datetime"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "description": "Sample type",
                        "enum": [
                            "soil",
                            "water"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "string",
                        "description": "Sample status",
                        "enum": [
                            "verified",
                            "missing",
                            "broken"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "bar_code",
                        "in": "query",
                        "type": "string",
                        "description": "Bar code of Sample"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sample-medias": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SampleMedia"
                            }
                        }
                    }
                },
                "operationId": "get_sample_media_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [slug, type]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [tests, sampling_methods]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/SampleMedia"
                        }
                    }
                },
                "operationId": "post_sample_media_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SampleMedia"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sample-medias/{media_type}/sampling-methods": {
            "parameters": [
                {
                    "name": "media_type",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SamplingMethod"
                            }
                        }
                    }
                },
                "operationId": "get_sample_media_list_by_media",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, description, media_type]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [field_tasks, media, parameter_lab_bottles]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/SamplingMethod"
                        }
                    }
                },
                "operationId": "post_sample_media_list_by_media",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SamplingMethod"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sample/files/{data_type}": {
            "parameters": [
                {
                    "name": "data_type",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_sample_csv",
                "tags": [
                    "default"
                ]
            }
        },
        "/samples": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Sample"
                            }
                        }
                    }
                },
                "operationId": "get_sample_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, sampling_date, sampling_time, is_delivered, has_problem, notes, type, status, bar_code, test_type, container_type_id, test_id, field_task_id, collected_by_id, sample_delivery_id, total_contamination]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [collected_by, container_type, field_task, results, sample_delivery, test, total_contamination]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "sampling_date",
                        "in": "query",
                        "type": "string",
                        "description": "Sample datetime"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "description": "Sample type",
                        "enum": [
                            "soil",
                            "water"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "string",
                        "description": "Sample status",
                        "enum": [
                            "verified",
                            "missing",
                            "broken"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "bar_code",
                        "in": "query",
                        "type": "string",
                        "description": "Bar code of Sample"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Sample"
                        }
                    }
                },
                "operationId": "post_sample_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Sample"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/samples/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_sample_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Sample"
                        }
                    }
                },
                "operationId": "put_sample_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Sample"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Sample"
                        }
                    }
                },
                "operationId": "get_sample_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, sampling_date, sampling_time, is_delivered, has_problem, notes, type, status, bar_code, test_type, container_type_id, test_id, field_task_id, collected_by_id, sample_delivery_id, total_contamination]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [collected_by, container_type, field_task, results, sample_delivery, test, total_contamination]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/site-maps-coordinates": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SiteMapsCoordinates"
                            }
                        }
                    }
                },
                "operationId": "get_site_maps_coordinates_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, site_map_id, location_id, x, y, boxmap_x, boxmap_y]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [site_map, location]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "site_map_id",
                        "in": "query",
                        "type": "string",
                        "description": "Site-map id"
                    },
                    {
                        "name": "location_id",
                        "in": "query",
                        "type": "string",
                        "description": "Location id"
                    },
                    {
                        "name": "x",
                        "in": "query",
                        "type": "number",
                        "description": "SiteMapsCoordinates x axis value"
                    },
                    {
                        "name": "y",
                        "in": "query",
                        "type": "number",
                        "description": "SiteMapsCoordinates y axis value"
                    },
                    {
                        "name": "boxmap_x",
                        "in": "query",
                        "type": "number",
                        "description": "SiteMapsCoordinates boxmap_x axis value"
                    },
                    {
                        "name": "boxmap_y",
                        "in": "query",
                        "type": "number",
                        "description": "SiteMapsCoordinates boxmap_y axis value"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/SiteMapsCoordinates"
                        }
                    }
                },
                "operationId": "post_site_maps_coordinates_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SiteMapsCoordinates"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/site-maps-coordinates/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_site_maps_coordinates_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SiteMapsCoordinates"
                        }
                    }
                },
                "operationId": "put_site_maps_coordinates_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SiteMapsCoordinates"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SiteMapsCoordinates"
                        }
                    }
                },
                "operationId": "get_site_maps_coordinates_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, site_map_id, location_id, x, y, boxmap_x, boxmap_y]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [site_map, location]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/site-maps/{site_map_id}": {
            "parameters": [
                {
                    "name": "site_map_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "patch": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SiteMap"
                        }
                    }
                },
                "operationId": "patch_site_map_item",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/SiteMap"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sites": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Site"
                            }
                        }
                    }
                },
                "operationId": "get_site_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, water_disposal, project_id, address_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [project, address, locations, field_events, site_maps, organization_profile, client]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Site name"
                    },
                    {
                        "name": "project_id",
                        "in": "query",
                        "type": "string",
                        "description": "project id"
                    },
                    {
                        "name": "water_disposal",
                        "in": "query",
                        "type": "string",
                        "description": "Water disposal",
                        "enum": [
                            "Pour on ground",
                            "Place in container",
                            "Other"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Site"
                        }
                    }
                },
                "operationId": "post_site_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Site"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sites/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_site_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Site"
                        }
                    }
                },
                "operationId": "put_site_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Site"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Site"
                        }
                    }
                },
                "operationId": "get_site_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, water_disposal, project_id, address_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [project, address, locations, field_events, site_maps, organization_profile, client]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sites/{id}/files": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SiteDataFile"
                            }
                        }
                    }
                },
                "operationId": "get_site_data_file_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [url, id, name, bucket, data_type, created, site_id, created_by_id, creator_info, content_type, size, url, last_modified, file_extension]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [site, created_by, content_type, size, url, last_modified, file_extension]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "File name"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/SiteDataFile"
                        }
                    }
                },
                "operationId": "post_site_data_file_list",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    },
                    {
                        "name": "data_type",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "lab_soil",
                            "lab_well",
                            "well",
                            "soil",
                            "field",
                            "report",
                            "drinking_water",
                            "lab_drinking_water"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sites/{id}/files/{file_id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "file_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_site_data_file_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SiteDataFile"
                        }
                    }
                },
                "operationId": "put_site_data_file_by_id",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    },
                    {
                        "name": "data_type",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "lab_soil",
                            "lab_well",
                            "well",
                            "soil",
                            "field",
                            "report",
                            "drinking_water",
                            "lab_drinking_water"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_site_data_file_by_id",
                "tags": [
                    "default"
                ]
            }
        },
        "/sites/{id}/files/{file_id}.{ext}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "file_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "ext",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_site_data_file_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SiteDataFile"
                        }
                    }
                },
                "operationId": "put_site_data_file_by_id",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    },
                    {
                        "name": "data_type",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "lab_soil",
                            "lab_well",
                            "well",
                            "soil",
                            "field",
                            "report",
                            "drinking_water",
                            "lab_drinking_water"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_site_data_file_by_id",
                "tags": [
                    "default"
                ]
            }
        },
        "/sites/{id}/site-maps/download": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_download_site_maps",
                "tags": [
                    "default"
                ]
            }
        },
        "/sites/{site_id}/field-data/uploads": {
            "parameters": [
                {
                    "name": "site_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SiteDataFile"
                            }
                        }
                    }
                },
                "operationId": "get_field_data_upload_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [url, id, name, bucket, data_type, created, site_id, created_by_id, creator_info, content_type, size, url, last_modified, file_extension]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [site, created_by, content_type, size, url, last_modified, file_extension]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "data_type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "enum": [
                            "field"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/SiteDataFile"
                        }
                    }
                },
                "operationId": "post_field_data_upload_list",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    },
                    {
                        "name": "data_type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "enum": [
                            "field"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sites/{site_id}/field-data/uploads/{file_id}": {
            "parameters": [
                {
                    "name": "site_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "file_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_field_data_upload_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sites/{site_id}/lab-data/uploads": {
            "parameters": [
                {
                    "name": "site_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SiteDataFile"
                            }
                        }
                    }
                },
                "operationId": "get_lab_data_upload_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [url, id, name, bucket, data_type, created, site_id, created_by_id, creator_info, content_type, size, url, last_modified, file_extension]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [site, created_by, content_type, size, url, last_modified, file_extension]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "data_type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "enum": [
                            "lab_soil",
                            "lab_well",
                            "lab_drinking_water"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/SiteDataFile"
                        }
                    }
                },
                "operationId": "post_lab_data_upload_list",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    },
                    {
                        "name": "data_type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "enum": [
                            "lab_soil",
                            "lab_well",
                            "lab_drinking_water"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sites/{site_id}/lab-data/uploads/{file_id}": {
            "parameters": [
                {
                    "name": "site_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "file_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_lab_data_upload_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sites/{site_id}/locations/uploads": {
            "parameters": [
                {
                    "name": "site_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/SiteDataFile"
                        }
                    }
                },
                "operationId": "post_csv_upload",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "enum": [
                            "well",
                            "soil",
                            "drinking_water"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sites/{site_id}/site-maps": {
            "parameters": [
                {
                    "name": "site_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/SiteMap"
                            }
                        }
                    }
                },
                "operationId": "get_site_map_list",
                "parameters": [
                    {
                        "name": "site_id",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "description": "Site map site id"
                    },
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, site_id, image, type, name, height, width, scale, title_x, title_y, legend_x, legend_y, url]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [site, site_maps_coordinates, url]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "description": "Site map type",
                        "enum": [
                            "well",
                            "soil",
                            "drinking_water"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Site map name"
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "type": "number",
                        "description": "Site map height"
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "type": "number",
                        "description": "Site map width"
                    },
                    {
                        "name": "scale",
                        "in": "query",
                        "type": "number",
                        "description": "Site map scale"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SiteMap"
                        }
                    }
                },
                "operationId": "post_site_map_list",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Site map type",
                        "enum": [
                            "well",
                            "soil",
                            "drinking_water"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Site map name"
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "type": "number",
                        "description": "Site map height"
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "type": "number",
                        "description": "Site map width"
                    },
                    {
                        "name": "scale",
                        "in": "query",
                        "type": "number",
                        "description": "Site map scale"
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sites/{site_id}/site-maps/{site_map_id}.jpeg": {
            "parameters": [
                {
                    "name": "site_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "site_map_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_site_map_image",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SiteMap"
                        }
                    }
                },
                "operationId": "put_site_map_image",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Site map type",
                        "enum": [
                            "well",
                            "soil",
                            "drinking_water"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Site map name"
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "type": "number",
                        "description": "Site map height"
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "type": "number",
                        "description": "Site map width"
                    },
                    {
                        "name": "scale",
                        "in": "query",
                        "type": "number",
                        "description": "Site map scale"
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_site_map_image",
                "tags": [
                    "default"
                ]
            }
        },
        "/sites/{site_id}/site-maps/{site_map_id}.jpg": {
            "parameters": [
                {
                    "name": "site_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "site_map_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_site_map_image",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SiteMap"
                        }
                    }
                },
                "operationId": "put_site_map_image",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Site map type",
                        "enum": [
                            "well",
                            "soil",
                            "drinking_water"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Site map name"
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "type": "number",
                        "description": "Site map height"
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "type": "number",
                        "description": "Site map width"
                    },
                    {
                        "name": "scale",
                        "in": "query",
                        "type": "number",
                        "description": "Site map scale"
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_site_map_image",
                "tags": [
                    "default"
                ]
            }
        },
        "/sites/{site_id}/site-maps/{site_map_id}.png": {
            "parameters": [
                {
                    "name": "site_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "site_map_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_site_map_image",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SiteMap"
                        }
                    }
                },
                "operationId": "put_site_map_image",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Site map type",
                        "enum": [
                            "well",
                            "soil",
                            "drinking_water"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "Site map name"
                    },
                    {
                        "name": "height",
                        "in": "query",
                        "type": "number",
                        "description": "Site map height"
                    },
                    {
                        "name": "width",
                        "in": "query",
                        "type": "number",
                        "description": "Site map width"
                    },
                    {
                        "name": "scale",
                        "in": "query",
                        "type": "number",
                        "description": "Site map scale"
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_site_map_image",
                "tags": [
                    "default"
                ]
            }
        },
        "/storage-locations": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/StorageLocation"
                            }
                        }
                    }
                },
                "operationId": "get_storage_location_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Storage location name"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/StorageLocation"
                        }
                    }
                },
                "operationId": "post_storage_location_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StorageLocation"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/storage-locations/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/StorageLocation"
                        }
                    }
                },
                "operationId": "put_commercial_carrier_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/StorageLocation"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/StorageLocation"
                        }
                    }
                },
                "operationId": "get_commercial_carrier_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/sub-domains/{slug}": {
            "parameters": [
                {
                    "name": "slug",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/SubDomain"
                        }
                    }
                },
                "operationId": "get_sub_domain_by_slug",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, slug, lab_id, workspace_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [lab, workspace]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/substances": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Substance"
                            }
                        }
                    }
                },
                "operationId": "get_substance_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, cas_id, form, substance_group_id, sample_media_type, cas_number, name]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [cas, results, tests, group, sample_media, comparisons, cas_number, name]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/substances/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Substance"
                        }
                    }
                },
                "operationId": "get_substance_item",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, cas_id, form, substance_group_id, sample_media_type, cas_number, name]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [cas, results, tests, group, sample_media, comparisons, cas_number, name]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/test-methods": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/TestMethod"
                            }
                        }
                    }
                },
                "operationId": "get_test_method_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, method]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [tests]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "method",
                        "in": "query",
                        "type": "string",
                        "description": "Test method"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/TestMethod"
                        }
                    }
                },
                "operationId": "post_test_method_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/TestMethod"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/test-methods/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_test_method_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TestMethod"
                        }
                    }
                },
                "operationId": "put_test_method_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/TestMethod"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/TestMethod"
                        }
                    }
                },
                "operationId": "get_test_method_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, method]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [tests]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/tests": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Test"
                            }
                        }
                    }
                },
                "operationId": "get_test_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, preservative, test_method_id, lab_id, parent_test_id, method]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [test_method, field_event_tests, media_types, regions, substances, test_lab_containers, lab, parent_test, child_tests, field_events, field_tasks]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Test name"
                    },
                    {
                        "name": "media_types",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests according to a media type"
                    },
                    {
                        "name": "preservative",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests by preservative"
                    },
                    {
                        "name": "parent_test_id",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests according to a parent test"
                    },
                    {
                        "name": "test_method_id",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests by test method id"
                    },
                    {
                        "name": "lab_id",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests according to a lab"
                    },
                    {
                        "name": "region_id",
                        "in": "query",
                        "type": "string",
                        "description": "Filter tests according by region"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Test"
                        }
                    }
                },
                "operationId": "post_test_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Test"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/tests/predefined-containers": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_predefined_containers",
                "tags": [
                    "default"
                ]
            }
        },
        "/tests/predefined-preservative": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "get_predefined_preservative",
                "tags": [
                    "default"
                ]
            }
        },
        "/tests/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_test_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Test"
                        }
                    }
                },
                "operationId": "put_test_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Test"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Test"
                        }
                    }
                },
                "operationId": "get_test_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, preservative, test_method_id, lab_id, parent_test_id, method]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [test_method, field_event_tests, media_types, regions, substances, test_lab_containers, lab, parent_test, child_tests, field_events, field_tasks]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/tests/{id}/regions": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_delete_all_region_tests",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/tests/{id}/regions/{region_id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "region_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_delete_test_by_region",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/user/{user_id}/notifications": {
            "parameters": [
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Notification"
                            }
                        }
                    }
                },
                "operationId": "get_user_notification_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, status, title, body, notification_type, data, user_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "status",
                        "in": "query",
                        "type": "string",
                        "description": "Notification Status",
                        "enum": [
                            "pending",
                            "seen"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "notification_type",
                        "in": "query",
                        "type": "string",
                        "description": "Notification Type",
                        "enum": [
                            "receiver_custody"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/users": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/User"
                            }
                        }
                    }
                },
                "operationId": "get_user_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [_created_at, _updated_at, id, openid_url, email, status, role, profile_last_updated, email_verified, contact_id, user_profile]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [contact, collected_samples, field_events, user_registration_devices, user_project_roles, user_workspace_roles, user_lab_roles, labs, workspaces, projects]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "email",
                        "in": "query",
                        "type": "string",
                        "description": "User email"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "operationId": "post_user_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/users/registration": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserRegistrationDevice"
                            }
                        }
                    }
                },
                "operationId": "get_project_user_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, user_id, registration_token]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [user]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "type": "string",
                        "description": "User id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/UserRegistrationDevice"
                        }
                    }
                },
                "operationId": "post_project_user_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserRegistrationDevice"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/users/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_user_item",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "operationId": "put_user_item",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                },
                "operationId": "get_user_item",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [_created_at, _updated_at, id, openid_url, email, status, role, profile_last_updated, email_verified, contact_id, user_profile]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [contact, collected_samples, field_events, user_registration_devices, user_project_roles, user_workspace_roles, user_lab_roles, labs, workspaces, projects]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/users/{user_id}/custody-transfer/history": {
            "parameters": [
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/CustodyTransfer"
                            }
                        }
                    }
                },
                "operationId": "get_user_custody_transfer_history",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, type, date_time, bar_code, notes, tracking_number, previous_id, next_id, sender_validation_id, receiver_validation_id, commercial_carrier_id, storage_location_id, next_transfer, sender_validation, receiver_validation]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [receiver_validation, sender_validation, previous_transfer, next_transfer, sample_deliveries, commercial_carrier, storage_location, custody_chains, field_tasks]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "bar_code",
                        "in": "query",
                        "type": "string",
                        "description": "Bar code of Custody-transfer"
                    },
                    {
                        "name": "field_event_id",
                        "in": "query",
                        "type": "string",
                        "description": "field_event_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/users/{user_id}/error-log/upload": {
            "parameters": [
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "post": {
                "responses": {
                    "200": {
                        "description": "Success"
                    }
                },
                "operationId": "post_upload_error_log",
                "parameters": [
                    {
                        "name": "file",
                        "in": "formData",
                        "type": "file",
                        "required": true
                    }
                ],
                "consumes": [
                    "multipart/form-data"
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/users/{user_id}/labs": {
            "parameters": [
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Lab"
                            }
                        }
                    }
                },
                "operationId": "get_user_lab_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, is_default, is_verified, address_id, organization_id, default_contact_id, lims_id, is_lims_verified, agency, slug]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [address, organization, lab_projects, projects, container_types, container_additives, field_events, tests, container_requests, default_contact, sub_domain, clients, workspaces, lims, user_lab_roles, users, default_checklists]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "type": "string",
                        "description": "Lab organization_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/users/{user_id}/projects": {
            "parameters": [
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    }
                },
                "operationId": "get_user_project_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [lab_contact_id, _created_at, _updated_at, id, name, region_id, workspace_id, client_id, lab_id, media_type, is_demo_project]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [sites, reports, region, cas_project_names, lab_contact, contact_projects, workspace, client, lab, user_project_roles, users, invitations, field_events]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Project name"
                    },
                    {
                        "name": "workspace_id",
                        "in": "query",
                        "type": "string",
                        "description": "Project workspace_id"
                    },
                    {
                        "name": "region_id",
                        "in": "query",
                        "type": "string",
                        "description": "Project region_id"
                    },
                    {
                        "name": "media_type",
                        "in": "query",
                        "type": "string",
                        "description": "Media Type"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/users/{user_id}/workspaces": {
            "parameters": [
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Workspace"
                            }
                        }
                    }
                },
                "operationId": "get_user_workspace_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [_created_at, _updated_at, name, id, organization_info, organization_id, payment_id, organization_profile_id, is_demo_workspace, slug]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [payment, organization, companies, organization_profile, projects, clients, sub_domain, labs, user_workspace_roles, users]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Workspace name"
                    },
                    {
                        "name": "organization_info",
                        "in": "query",
                        "type": "string",
                        "description": "Workspace organization info"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "type": "string",
                        "description": "Workspace organization_id"
                    },
                    {
                        "name": "payment_id",
                        "in": "query",
                        "type": "string",
                        "description": "Workspace payment_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/users/{user_id}/workspaces/{workspace_id}/projects": {
            "parameters": [
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Project"
                            }
                        }
                    }
                },
                "operationId": "get_user_workspace_project_list",
                "parameters": [
                    {
                        "name": "workspace_id",
                        "in": "query",
                        "required": true,
                        "type": "string",
                        "description": "Project workspace_id"
                    },
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [lab_contact_id, _created_at, _updated_at, id, name, region_id, workspace_id, client_id, lab_id, media_type, is_demo_project]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [sites, reports, region, cas_project_names, lab_contact, contact_projects, workspace, client, lab, user_project_roles, users, invitations, field_events]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Project name"
                    },
                    {
                        "name": "region_id",
                        "in": "query",
                        "type": "string",
                        "description": "Project region_id"
                    },
                    {
                        "name": "media_type",
                        "in": "query",
                        "type": "string",
                        "description": "Media Type"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/well-gauges": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WellGauge"
                            }
                        }
                    }
                },
                "operationId": "get_well_gauge_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [depth_to_product, id, toc, diameter, alias, diameter_units, material, wind_speed, total_depth, screen_length, screen_length_units, depth_to_water, depth_to_bottom, air_temperature, has_free_product, type, datetime, weather_type, wind_direction, notes, drawdown, time_sampling, drawdown_unit, time_sampling_unit, depth_to_water_unit, location_id, is_construction, is_alternative, depth_to_product_comparison, depth_to_water_comparison, drawdown_comparison, time_sampling_comparison, depth_to_product, date, substance_sum, bottom_of_well, top_of_screen, product_thickness, groundwater_elevation, free_product_elevation, free_product]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [location, field_task, well_stability_checks, depth_to_product, location_toc, date, substance_sum, bottom_of_well, location_depth_to_bottom, top_of_screen, location_screen_length, final_well_stability, product_thickness, groundwater_elevation, free_product_elevation, free_product]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "location_id",
                        "in": "query",
                        "type": "string",
                        "description": "Location id"
                    },
                    {
                        "name": "field_task_id",
                        "in": "query",
                        "type": "string",
                        "description": "Field Task id"
                    },
                    {
                        "name": "datetime",
                        "in": "query",
                        "type": "string",
                        "description": "WellGauge check datetime"
                    },
                    {
                        "name": "type",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "well",
                            "soil"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "free_product",
                        "in": "query",
                        "type": "number",
                        "description": "WellGauge free product (True/False)"
                    },
                    {
                        "name": "toc",
                        "in": "query",
                        "type": "number",
                        "description": "WellGauge toc (top of casing) value"
                    },
                    {
                        "name": "diameter",
                        "in": "query",
                        "type": "number",
                        "description": "WellGauge diameter value"
                    },
                    {
                        "name": "screen_length",
                        "in": "query",
                        "type": "number",
                        "description": "WellGauge screen length value"
                    },
                    {
                        "name": "material",
                        "in": "query",
                        "type": "string",
                        "description": "WellGauge material"
                    },
                    {
                        "name": "alias",
                        "in": "query",
                        "type": "string",
                        "description": "WellGauge alias"
                    },
                    {
                        "name": "wind_speed",
                        "in": "query",
                        "type": "number",
                        "description": "WellGauge wind_speed"
                    },
                    {
                        "name": "total_depth",
                        "in": "query",
                        "type": "number",
                        "description": "WellGauge total_depth"
                    },
                    {
                        "name": "depth_to_water",
                        "in": "query",
                        "type": "number",
                        "description": "WellGauge depth_to_water"
                    },
                    {
                        "name": "depth_to_bottom",
                        "in": "query",
                        "type": "number",
                        "description": "WellGauge depth_to_bottom"
                    },
                    {
                        "name": "air_temperature",
                        "in": "query",
                        "type": "number",
                        "description": "WellGauge air_temperature"
                    },
                    {
                        "name": "depth_to_product",
                        "in": "query",
                        "type": "number",
                        "description": "WellGauge depth_to_product"
                    },
                    {
                        "name": "notes",
                        "in": "query",
                        "type": "string",
                        "description": "WellGauge notes"
                    },
                    {
                        "name": "drawdown",
                        "in": "query",
                        "type": "number",
                        "description": "WellGauge drawdown"
                    },
                    {
                        "name": "time_sampling",
                        "in": "query",
                        "type": "number",
                        "description": "WellGauge time_sampling"
                    },
                    {
                        "name": "depth_to_product_comparison",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "<",
                            "="
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "depth_to_water_comparison",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "<",
                            "="
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "drawdown_comparison",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "<",
                            "="
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "time_sampling_comparison",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "<",
                            "="
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "weather_type",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "sunny",
                            "cloudy",
                            "rainy",
                            "partly cloudy",
                            "snowy"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "wind_direction",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "nne",
                            "ene",
                            "ese",
                            "sse",
                            "wsw",
                            "wnw",
                            "nnw"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "diameter_units",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "in",
                            "ft"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "screen_length_units",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "in",
                            "ft"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/WellGauge"
                        }
                    }
                },
                "operationId": "post_well_gauge_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/WellGauge"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/well-gauges/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_well_gauge_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WellGauge"
                        }
                    }
                },
                "operationId": "put_well_gauge_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/WellGauge"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WellGauge"
                        }
                    }
                },
                "operationId": "get_well_gauge_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [depth_to_product, id, toc, diameter, alias, diameter_units, material, wind_speed, total_depth, screen_length, screen_length_units, depth_to_water, depth_to_bottom, air_temperature, has_free_product, type, datetime, weather_type, wind_direction, notes, drawdown, time_sampling, drawdown_unit, time_sampling_unit, depth_to_water_unit, location_id, is_construction, is_alternative, depth_to_product_comparison, depth_to_water_comparison, drawdown_comparison, time_sampling_comparison, depth_to_product, date, substance_sum, bottom_of_well, top_of_screen, product_thickness, groundwater_elevation, free_product_elevation, free_product]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [location, field_task, well_stability_checks, depth_to_product, location_toc, date, substance_sum, bottom_of_well, location_depth_to_bottom, top_of_screen, location_screen_length, final_well_stability, product_thickness, groundwater_elevation, free_product_elevation, free_product]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/well-stability-checks": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/WellStabilityChecks"
                            }
                        }
                    }
                },
                "operationId": "get_well_stability_check_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, date_time, acidity, flow_rate, turbidity, interval, running_volume, is_final_stability, water_depth, temperature, conductivity, dissolved_o2, oxygen_reduction_potential, temperature_unit, conductivity_unit, flow_rate_unit, dissolved_o2_unit, oxygen_reduction_potential_unit, turbidity_unit, acidity_unit, acidity_comparison, flow_rate_comparison, conductivity_comparison, turbidity_comparison, water_depth_comparison, dissolved_o2_comparison, temperature_comparison, oxygen_reduction_potential_comparison, well_gauge_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [well_gauge]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "well_gauge_id",
                        "in": "query",
                        "type": "string",
                        "description": "WellGauge id"
                    },
                    {
                        "name": "weather_type",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "sunny",
                            "cloudy",
                            "rainy",
                            "partly cloudy",
                            "snowy"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "wind_direction",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "nne",
                            "ene",
                            "ese",
                            "sse",
                            "wsw",
                            "wnw",
                            "nnw"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "date_time",
                        "in": "query",
                        "type": "string",
                        "description": "WellStabilityCheck date_time"
                    },
                    {
                        "name": "acidity",
                        "in": "query",
                        "type": "number",
                        "description": "WellStabilityCheck acidity"
                    },
                    {
                        "name": "flow_rate",
                        "in": "query",
                        "type": "number",
                        "description": "WellStabilityCheck flow_rate"
                    },
                    {
                        "name": "turbidity",
                        "in": "query",
                        "type": "number",
                        "description": "WellStabilityCheck turbidity"
                    },
                    {
                        "name": "water_depth",
                        "in": "query",
                        "type": "number",
                        "description": "WellStabilityCheck water_depth"
                    },
                    {
                        "name": "temperature",
                        "in": "query",
                        "type": "number",
                        "description": "WellStabilityCheck temperature"
                    },
                    {
                        "name": "conductivity",
                        "in": "query",
                        "type": "number",
                        "description": "WellStabilityCheck conductivity"
                    },
                    {
                        "name": "dissolved_o2",
                        "in": "query",
                        "type": "number",
                        "description": "WellStabilityCheck dissolved_o2"
                    },
                    {
                        "name": "oxygen_reduction_potential",
                        "in": "query",
                        "type": "number",
                        "description": "WellStabilityCheck oxygen_reduction_potential"
                    },
                    {
                        "name": "acidity_comparison",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "<",
                            "="
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "flow_rate_comparison",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "<",
                            "="
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "conductivity_comparison",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "<",
                            "="
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "turbidity_comparison",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "<",
                            "="
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "water_depth_comparison",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "<",
                            "="
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "dissolved_o2_comparison",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "<",
                            "="
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "temperature_comparison",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "<",
                            "="
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "oxygen_reduction_potential_comparison",
                        "in": "query",
                        "type": "string",
                        "enum": [
                            "<",
                            "="
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/WellStabilityChecks"
                        }
                    }
                },
                "operationId": "post_well_stability_check_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/WellStabilityChecks"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/well-stability-checks/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_well_stability_check_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WellStabilityChecks"
                        }
                    }
                },
                "operationId": "put_well_stability_check_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/WellStabilityChecks"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/WellStabilityChecks"
                        }
                    }
                },
                "operationId": "get_well_stability_check_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, date_time, acidity, flow_rate, turbidity, interval, running_volume, is_final_stability, water_depth, temperature, conductivity, dissolved_o2, oxygen_reduction_potential, temperature_unit, conductivity_unit, flow_rate_unit, dissolved_o2_unit, oxygen_reduction_potential_unit, turbidity_unit, acidity_unit, acidity_comparison, flow_rate_comparison, conductivity_comparison, turbidity_comparison, water_depth_comparison, dissolved_o2_comparison, temperature_comparison, oxygen_reduction_potential_comparison, well_gauge_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [well_gauge]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/workspaces": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Workspace"
                            }
                        }
                    }
                },
                "operationId": "get_workspace_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [_created_at, _updated_at, name, id, organization_info, organization_id, payment_id, organization_profile_id, is_demo_workspace, slug]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [payment, organization, companies, organization_profile, projects, clients, sub_domain, labs, user_workspace_roles, users]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Workspace name"
                    },
                    {
                        "name": "organization_info",
                        "in": "query",
                        "type": "string",
                        "description": "Workspace organization info"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "type": "string",
                        "description": "Workspace organization_id"
                    },
                    {
                        "name": "payment_id",
                        "in": "query",
                        "type": "string",
                        "description": "Workspace payment_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/Workspace"
                        }
                    }
                },
                "operationId": "post_workspace_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Workspace"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/workspaces/{id}": {
            "parameters": [
                {
                    "name": "id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_workspace_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Workspace"
                        }
                    }
                },
                "operationId": "put_workspace_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Workspace"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/Workspace"
                        }
                    }
                },
                "operationId": "get_workspace_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [_created_at, _updated_at, name, id, organization_info, organization_id, payment_id, organization_profile_id, is_demo_workspace, slug]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [payment, organization, companies, organization_profile, projects, clients, sub_domain, labs, user_workspace_roles, users]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/workspaces/{workspace_id}/clients": {
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/OrganizationProfile"
                            }
                        }
                    }
                },
                "operationId": "get_workspace_client_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, website, domain_name, organization_id, address_id]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [organization, address, workspaces, projects, client_workspaces, client_labs]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile name"
                    },
                    {
                        "name": "website",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile website"
                    },
                    {
                        "name": "domain_name",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile domain name"
                    },
                    {
                        "name": "organisation_id",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile organisation_id"
                    },
                    {
                        "name": "address_id",
                        "in": "query",
                        "type": "string",
                        "description": "Organization pofile address_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/OrganizationProfile"
                        }
                    }
                },
                "operationId": "post_workspace_client_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/OrganizationProfile"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/workspaces/{workspace_id}/clients/{client_id}": {
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "client_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_workspace_client_list_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/workspaces/{workspace_id}/invitations": {
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Invitation"
                            }
                        }
                    }
                },
                "operationId": "get_workspace_invitation_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, token, token_is_used, type, user_lab_role_id, user_project_role_id, user_workspace_role_id, is_new_user, created_by, datetime]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [lab_role, project_role, workspace_role, user]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Invitation"
                            }
                        }
                    }
                },
                "operationId": "post_workspace_invitation_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/Resource"
                        }
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/workspaces/{workspace_id}/invitations/{invitation_id}": {
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "invitation_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_workspace_invitation_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/workspaces/{workspace_id}/labs": {
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Lab"
                            }
                        }
                    }
                },
                "operationId": "get_workspace_labs",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, is_default, is_verified, address_id, organization_id, default_contact_id, lims_id, is_lims_verified, agency, slug]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [address, organization, lab_projects, projects, container_types, container_additives, field_events, tests, container_requests, default_contact, sub_domain, clients, workspaces, lims, user_lab_roles, users, default_checklists]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "type": "string",
                        "description": "Lab organization_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/workspaces/{workspace_id}/listed-labs": {
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/Lab"
                            }
                        }
                    }
                },
                "operationId": "get_workspace_listed_labs",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, name, is_default, is_verified, address_id, organization_id, default_contact_id, lims_id, is_lims_verified, agency, slug]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [address, organization, lab_projects, projects, container_types, container_additives, field_events, tests, container_requests, default_contact, sub_domain, clients, workspaces, lims, user_lab_roles, users, default_checklists]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "organization_id",
                        "in": "query",
                        "type": "string",
                        "description": "Lab organization_id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/workspaces/{workspace_id}/users": {
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/UserWorkspaceRole"
                            }
                        }
                    }
                },
                "operationId": "get_workspace_user_list",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, user_id, workspace_id, role]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [user, workspace, invitation]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "type": "integer",
                        "description": "Number of items to skip before returning the results."
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "type": "integer",
                        "description": "Maximum number of items to return."
                    },
                    {
                        "name": "order_on",
                        "in": "query",
                        "type": "string",
                        "description": "Order On column"
                    },
                    {
                        "name": "order_by",
                        "in": "query",
                        "type": "string",
                        "description": "Order By asc/desc",
                        "enum": [
                            "ASC",
                            "DESC"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "role",
                        "in": "query",
                        "type": "string",
                        "description": "Role name",
                        "enum": [
                            "owner",
                            "admin",
                            "member"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "type": "string",
                        "description": "User id"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "post": {
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/UserWorkspaceRole"
                        }
                    }
                },
                "operationId": "post_workspace_user_list",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserWorkspaceRole"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/workspaces/{workspace_id}/users/{user_id}": {
            "parameters": [
                {
                    "name": "workspace_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                },
                {
                    "name": "user_id",
                    "in": "path",
                    "required": true,
                    "type": "string"
                }
            ],
            "delete": {
                "responses": {
                    "204": {
                        "description": "No Content"
                    }
                },
                "operationId": "delete_workspace_user_by_id",
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "put": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserWorkspaceRole"
                        }
                    }
                },
                "operationId": "put_workspace_user_by_id",
                "parameters": [
                    {
                        "name": "payload",
                        "required": true,
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/UserWorkspaceRole"
                        }
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            },
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "schema": {
                            "$ref": "#/definitions/UserWorkspaceRole"
                        }
                    }
                },
                "operationId": "get_workspace_user_by_id",
                "parameters": [
                    {
                        "name": "selects",
                        "in": "query",
                        "type": "array",
                        "description": "Select what fields to display [id, user_id, workspace_id, role]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "fields",
                        "in": "query",
                        "type": "array",
                        "description": "Addition fields to include in the response [user, workspace, invitation]",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/{location_type}-boxmap.html": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Content-Type": {
                                "description": "text/html",
                                "type": "string"
                            }
                        }
                    }
                },
                "operationId": "get_boxmap",
                "parameters": [
                    {
                        "name": "location_type",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "(well|soil|drinking_water)"
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "UUID"
                    },
                    {
                        "name": "selected_dates",
                        "in": "query",
                        "type": "array",
                        "required": true,
                        "description": "yyyy-mm-dd",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "location_ids",
                        "in": "query",
                        "type": "array",
                        "required": true,
                        "description": "UUID",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "substance_ids",
                        "in": "query",
                        "type": "array",
                        "required": true,
                        "description": "UUID",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "(ppb|ppt|ppm)",
                        "enum": [
                            "ppb",
                            "ppt",
                            "ppm"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "sitemap_id",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "UUID"
                    },
                    {
                        "name": "criteria_id",
                        "in": "query",
                        "type": "string",
                        "description": "UUID"
                    },
                    {
                        "name": "sample_dates_only",
                        "in": "query",
                        "type": "boolean",
                        "required": true,
                        "description": "(true|false)"
                    },
                    {
                        "name": "box_scale",
                        "in": "query",
                        "type": "number",
                        "required": true,
                        "description": "float 1.0"
                    },
                    {
                        "name": "map_scale",
                        "in": "query",
                        "type": "number",
                        "required": true,
                        "description": "float 1.0"
                    },
                    {
                        "name": "zoom_scale",
                        "in": "query",
                        "type": "number",
                        "description": "float 1.0"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        },
        "/{location_type}-boxmap.pdf": {
            "get": {
                "responses": {
                    "200": {
                        "description": "Success",
                        "headers": {
                            "Content-Type": {
                                "description": "application/pdf",
                                "type": "string"
                            }
                        }
                    }
                },
                "operationId": "get_boxmap_pdf",
                "parameters": [
                    {
                        "name": "location_type",
                        "in": "path",
                        "required": true,
                        "type": "string",
                        "description": "(well|soil|drinking_water)"
                    },
                    {
                        "name": "site_id",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "UUID"
                    },
                    {
                        "name": "selected_dates",
                        "in": "query",
                        "type": "array",
                        "required": true,
                        "description": "yyyy-mm-dd",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "location_ids",
                        "in": "query",
                        "type": "array",
                        "required": true,
                        "description": "UUID",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "substance_ids",
                        "in": "query",
                        "type": "array",
                        "required": true,
                        "description": "UUID",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "unit",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "(ppb|ppt|ppm)",
                        "enum": [
                            "ppb",
                            "ppt",
                            "ppm"
                        ],
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "sitemap_id",
                        "in": "query",
                        "type": "string",
                        "required": true,
                        "description": "UUID"
                    },
                    {
                        "name": "criteria_id",
                        "in": "query",
                        "type": "string",
                        "description": "UUID"
                    },
                    {
                        "name": "sample_dates_only",
                        "in": "query",
                        "type": "boolean",
                        "required": true,
                        "description": "(true|false)"
                    },
                    {
                        "name": "box_scale",
                        "in": "query",
                        "type": "number",
                        "required": true,
                        "description": "float 1.0"
                    },
                    {
                        "name": "map_scale",
                        "in": "query",
                        "type": "number",
                        "required": true,
                        "description": "float 1.0"
                    },
                    {
                        "name": "zoom_scale",
                        "in": "query",
                        "type": "number",
                        "description": "float 1.0"
                    }
                ],
                "security": [
                    {
                        "apiKey": []
                    }
                ],
                "tags": [
                    "default"
                ]
            }
        }
    },
    "info": {
        "title": "API-v2",
        "version": "2",
        "description": "SampleServe API v2"
    },
    "produces": [
        "application/json"
    ],
    "consumes": [
        "application/json"
    ],
    "securityDefinitions": {
        "apiKey": {
            "type": "apiKey",
            "in": "header",
            "name": "Authorization",
            "template": "Bearer {apiKey}"
        }
    },
    "tags": [
        {
            "name": "default",
            "description": "Default namespace"
        }
    ],
    "definitions": {
        "Checklist": {
            "type": "object",
            "properties": {
                "sample_delivery_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                },
                "lab_id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "lab_id",
                "name"
            ]
        },
        "ChecklistItem": {
            "type": "object",
            "properties": {
                "checklist_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "description": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            },
            "required": [
                "checklist_id",
                "description",
                "type"
            ]
        },
        "CommercialCarrier": {
            "type": "object",
            "properties": {
                "provider": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "Contact": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "job_title": {
                    "type": "string",
                    "x-nullable": true
                },
                "address_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "picture": {
                    "type": "string",
                    "format": "url"
                },
                "gender": {
                    "type": "string"
                },
                "given_name": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "company_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "family_name": {
                    "type": "string"
                },
                "telephone": {
                    "type": "string",
                    "x-nullable": true
                },
                "mobile": {
                    "type": "string"
                }
            },
            "required": [
                "email"
            ]
        },
        "ContactProject": {
            "type": "object",
            "properties": {
                "contact_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "description": {
                    "type": "string"
                },
                "contact_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "project_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "is_product_manager": {
                    "type": "boolean"
                }
            },
            "required": [
                "project_id"
            ]
        },
        "ContainerType": {
            "type": "object",
            "properties": {
                "size_units": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "allowed_media_types": {
                    "type": "string",
                    "items": {
                        "type": "string"
                    }
                },
                "image": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "instructions": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "size": {
                    "type": "number",
                    "format": "float"
                }
            },
            "required": [
                "name",
                "size",
                "size_units"
            ]
        },
        "CustodyTransfer": {
            "type": "object",
            "properties": {
                "previous_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "type": {
                    "type": "string",
                    "x-nullable": true
                },
                "commercial_carrier_id": {
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "notes": {
                    "type": "string",
                    "x-nullable": true
                },
                "date_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "storage_location_id": {
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "tracking_number": {
                    "type": "string",
                    "x-nullable": true
                },
                "next_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "receiver_validation_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "bar_code": {
                    "type": "string"
                },
                "sender_validation_id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "date_time"
            ]
        },
        "Notification": {
            "type": "object",
            "properties": {
                "notification_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "user_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "body": {
                    "type": "string"
                },
                "status": {
                    "type": "string"
                },
                "title": {
                    "type": "string"
                },
                "data": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "Equipment": {
            "type": "object",
            "properties": {
                "serial": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "model": {
                    "type": "string",
                    "x-nullable": true
                },
                "notes": {
                    "type": "string",
                    "x-nullable": true
                },
                "cell_size": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "required": [
                "cell_size",
                "serial",
                "type"
            ]
        },
        "EquipmentCalibration": {
            "type": "object",
            "properties": {
                "date_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "equipment_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "notes": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "required": [
                "date_time",
                "equipment_id"
            ]
        },
        "FieldEquipment": {
            "type": "object",
            "properties": {
                "tubing_diameter_units": {
                    "type": "string"
                },
                "tubing_length_units": {
                    "type": "string"
                },
                "pump_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "tubing_type": {
                    "type": "string",
                    "x-nullable": true
                },
                "meter_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "tubing_diameter": {
                    "type": "number",
                    "format": "float",
                    "x-nullable": true
                },
                "tubing_length": {
                    "type": "number",
                    "format": "float",
                    "x-nullable": true
                },
                "field_task_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "notes": {
                    "type": "string",
                    "x-nullable": true
                },
                "pump_placement": {
                    "type": "number",
                    "format": "float",
                    "x-nullable": true
                }
            },
            "required": [
                "field_task_id",
                "tubing_diameter_units",
                "tubing_length_units"
            ]
        },
        "FieldEvent": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "string"
                },
                "media_type": {
                    "type": "string"
                },
                "lab_id": {
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "shipping_contact_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "lab_project_id": {
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "sampling_date": {
                    "type": "string",
                    "format": "date"
                },
                "gauge_task_count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "sample_task_count": {
                    "type": "integer",
                    "format": "int32",
                    "readOnly": true
                },
                "site_id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "sampling_date",
                "site_id",
                "status"
            ]
        },
        "FieldEventTaskSchema": {
            "type": "object",
            "properties": {
                "location_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "type": {
                    "type": "string"
                },
                "sampling_method_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "datetime": {
                    "type": "string",
                    "format": "date-time"
                },
                "test_parameters": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "duplicate_name": {
                                "type": "string"
                            },
                            "test_id": {
                                "type": "string",
                                "format": "uuid"
                            },
                            "is_duplicate": {
                                "type": "boolean"
                            },
                            "is_ms_msd": {
                                "type": "boolean"
                            },
                            "ms_msd_name": {
                                "type": "string"
                            }
                        },
                        "required": [
                            "test_id"
                        ]
                    }
                },
                "status": {
                    "type": "string"
                }
            },
            "required": [
                "location_id",
                "sampling_method_id",
                "status",
                "type"
            ]
        },
        "FieldTask": {
            "type": "object",
            "properties": {
                "location_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "type": {
                    "type": "string"
                },
                "signature_url": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "readOnly": true
                },
                "status": {
                    "type": "string"
                },
                "notes": {
                    "type": "string",
                    "x-nullable": true
                },
                "is_sample": {
                    "type": "boolean"
                },
                "is_gauge": {
                    "type": "boolean"
                },
                "sample_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "collected_date_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "field_equipment_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "collected_long": {
                    "type": "number",
                    "format": "float",
                    "x-nullable": true
                },
                "signature": {
                    "type": "string",
                    "x-nullable": true
                },
                "field_event_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "total_contamination": {
                    "type": "integer",
                    "format": "int32"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "selfie": {
                    "type": "string",
                    "x-nullable": true
                },
                "collected_by_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "selfie_url": {
                    "type": "string",
                    "x-nullable": true
                },
                "depth_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "collected_lat": {
                    "type": "number",
                    "format": "float",
                    "x-nullable": true
                },
                "sampling_method_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "well_gauge_id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "type"
            ]
        },
        "Lab": {
            "type": "object",
            "properties": {
                "lims": {
                    "type": "string",
                    "x-nullable": true
                },
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "address_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "is_verified": {
                    "type": "boolean"
                },
                "workspaces": {
                    "type": "string",
                    "items": {
                        "type": "string"
                    }
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "is_lims_verified": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "default_contact_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "sub_domain": {
                    "type": "string",
                    "items": {
                        "type": "string"
                    }
                },
                "is_default": {
                    "type": "boolean"
                },
                "slug": {
                    "type": "string"
                },
                "agency": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "LabProject": {
            "type": "object",
            "properties": {
                "note_to_lab": {
                    "type": "string",
                    "x-nullable": true
                },
                "cancelled": {
                    "type": "boolean"
                },
                "postal_address_id": {
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "order_number": {
                    "type": "string",
                    "x-nullable": true
                },
                "field_event_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "field_events": {
                    "type": "string",
                    "items": {
                        "type": "string"
                    }
                },
                "lab_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                },
                "turn_around_time": {
                    "type": "string",
                    "x-nullable": true
                },
                "notes": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "required": [
                "field_event_id",
                "lab_id"
            ]
        },
        "Location": {
            "type": "object",
            "properties": {
                "well_screen_length": {
                    "type": "number",
                    "format": "float"
                },
                "type": {
                    "type": "string"
                },
                "well_toc": {
                    "type": "number",
                    "format": "float"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "string",
                    "x-nullable": true
                },
                "well_diameter": {
                    "type": "number",
                    "format": "float"
                },
                "water_disposal": {
                    "type": "string",
                    "x-nullable": true
                },
                "lab_notes": {
                    "type": "string",
                    "x-nullable": true
                },
                "well_material": {
                    "type": "string"
                },
                "well_depth_to_bottom": {
                    "type": "number",
                    "format": "float"
                },
                "total_contamination": {
                    "type": "number",
                    "format": "float",
                    "readOnly": true
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "lab_hold": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "long": {
                    "type": "number",
                    "format": "float",
                    "x-nullable": true
                },
                "drinking_waters": {
                    "type": "string",
                    "items": {
                        "type": "string"
                    }
                },
                "lat": {
                    "type": "number",
                    "format": "float",
                    "x-nullable": true
                },
                "site_id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "name",
                "site_id",
                "type"
            ]
        },
        "LocationImage": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "location_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "url": {
                    "type": "string"
                },
                "last_modified": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "content_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                }
            },
            "required": [
                "bucket",
                "location_id"
            ]
        },
        "Organization": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "name",
                "type"
            ]
        },
        "OrganizationProfile": {
            "type": "object",
            "properties": {
                "organization_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "address_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "website": {
                    "type": "string",
                    "x-nullable": true
                },
                "domain_name": {
                    "type": "string",
                    "x-nullable": true
                },
                "projects": {
                    "type": "string",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "Payment": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string",
                    "x-nullable": true
                },
                "token": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "email_verified": {
                    "type": "boolean",
                    "description": "Was the user's email validated last time we pulled their profile"
                },
                "status": {
                    "type": "string"
                },
                "openid_url": {
                    "type": "string",
                    "format": "url",
                    "readOnly": true
                },
                "email": {
                    "type": "string",
                    "format": "email"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "contact_id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "email"
            ]
        },
        "Project": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "reports": {
                    "type": "string",
                    "items": {
                        "type": "string"
                    }
                },
                "region_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "media_type": {
                    "type": "string"
                },
                "lab_contact_id": {
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "lab_id": {
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "client_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "workspace_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "is_demo_project": {
                    "type": "boolean",
                    "description": "Is this a demo or test project and should be excluded from product statistics"
                }
            },
            "required": [
                "name"
            ]
        },
        "Region": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "abbr": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                }
            },
            "required": [
                "abbr",
                "name",
                "type"
            ]
        },
        "SampleDelivery": {
            "type": "object",
            "properties": {
                "has_blank": {
                    "type": "boolean"
                },
                "field_task_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "status": {
                    "type": "string"
                },
                "notes": {
                    "type": "string",
                    "x-nullable": true
                },
                "is_completed": {
                    "type": "boolean"
                },
                "sample_count": {
                    "type": "integer",
                    "format": "int32"
                },
                "has_duplicate": {
                    "type": "boolean"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "belong_to_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "lab_project_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "collected_by_id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "field_task_id",
                "status"
            ]
        },
        "Resource": {
            "properties": {
                "emails": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "role": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string"
                }
            },
            "type": "object"
        },
        "Invitation": {
            "type": "object",
            "properties": {
                "token_is_used": {
                    "type": "boolean"
                },
                "type": {
                    "type": "string"
                },
                "is_new_user": {
                    "type": "boolean"
                },
                "datetime": {
                    "type": "string",
                    "format": "date-time"
                },
                "user_project_role_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "user_workspace_role_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "token": {
                    "type": "string"
                },
                "created_by": {
                    "type": "string",
                    "format": "uuid"
                },
                "user_lab_role_id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "created_by",
                "is_new_user",
                "type"
            ]
        },
        "UserProjectRole": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "user_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "role": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "UserWorkspaceRole": {
            "type": "object",
            "properties": {
                "invitation": {
                    "type": "string",
                    "x-nullable": true
                },
                "workspace_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "user_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "role": {
                    "type": "string"
                }
            },
            "required": [
                "role"
            ]
        },
        "Sample": {
            "type": "object",
            "properties": {
                "type": {
                    "type": "string"
                },
                "field_task_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "container_type_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "status": {
                    "type": "string",
                    "x-nullable": true
                },
                "notes": {
                    "type": "string",
                    "x-nullable": true
                },
                "test_type": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "collected_by_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "sampling_date": {
                    "type": "string",
                    "format": "date"
                },
                "has_problem": {
                    "type": "boolean"
                },
                "sample_delivery_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "bar_code": {
                    "type": "string"
                },
                "test_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "is_delivered": {
                    "type": "boolean"
                },
                "sampling_time": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "required": [
                "container_type_id",
                "field_task_id",
                "sampling_date",
                "test_id",
                "type"
            ]
        },
        "Site": {
            "type": "object",
            "properties": {
                "address_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "water_disposal": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                },
                "project_id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "name"
            ]
        },
        "SiteDataFile": {
            "type": "object",
            "properties": {
                "bucket": {
                    "type": "string"
                },
                "url": {
                    "type": "string"
                },
                "data_type": {
                    "type": "string"
                },
                "created": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "created_by_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "last_modified": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "content_type": {
                    "type": "string"
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "size": {
                    "type": "integer",
                    "format": "int32"
                },
                "_url": {
                    "type": "string",
                    "x-nullable": true
                },
                "site_id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "bucket",
                "created_by_id",
                "data_type",
                "site_id"
            ]
        },
        "SiteMap": {
            "type": "object",
            "properties": {
                "url": {
                    "type": "string"
                },
                "title_x": {
                    "type": "number",
                    "format": "float",
                    "x-nullable": true
                },
                "site_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "type": {
                    "type": "string"
                },
                "legend_x": {
                    "type": "number",
                    "format": "float",
                    "x-nullable": true
                },
                "image": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "scale": {
                    "type": "number",
                    "format": "float"
                },
                "height": {
                    "type": "number",
                    "format": "float"
                },
                "name": {
                    "type": "string"
                },
                "legend_y": {
                    "type": "number",
                    "format": "float",
                    "x-nullable": true
                },
                "width": {
                    "type": "number",
                    "format": "float"
                },
                "title_y": {
                    "type": "number",
                    "format": "float",
                    "x-nullable": true
                }
            },
            "required": [
                "site_id",
                "type"
            ]
        },
        "SiteMapsCoordinates": {
            "type": "object",
            "properties": {
                "location_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "site_map_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "boxmap_y": {
                    "type": "number",
                    "format": "float"
                },
                "x": {
                    "type": "number",
                    "format": "float"
                },
                "y": {
                    "type": "number",
                    "format": "float"
                },
                "boxmap_x": {
                    "type": "number",
                    "format": "float"
                }
            },
            "required": [
                "location_id",
                "site_map_id",
                "x",
                "y"
            ]
        },
        "Test": {
            "type": "object",
            "properties": {
                "test_method_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "lab_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "method": {
                    "type": "string"
                },
                "parent_test_id": {
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "name": {
                    "type": "string",
                    "x-nullable": true
                },
                "preservative": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "required": [
                "test_method_id"
            ]
        },
        "TestMethod": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "method"
            ]
        },
        "WellGauge": {
            "type": "object",
            "properties": {
                "depth_to_product": {
                    "type": "number",
                    "x-nullable": true
                },
                "location_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "type": {
                    "type": "string"
                },
                "depth_to_water_unit": {
                    "type": "string",
                    "x-nullable": true
                },
                "screen_length_units": {
                    "type": "string",
                    "x-nullable": true
                },
                "drawdown_unit": {
                    "type": "string",
                    "x-nullable": true
                },
                "is_alternative": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "time_sampling_unit": {
                    "type": "string",
                    "x-nullable": true
                },
                "_depth_to_product": {
                    "type": "number",
                    "x-nullable": true
                },
                "weather_type": {
                    "type": "string",
                    "x-nullable": true
                },
                "notes": {
                    "type": "string",
                    "x-nullable": true
                },
                "screen_length": {
                    "type": "number",
                    "x-nullable": true
                },
                "material": {
                    "type": "string",
                    "x-nullable": true
                },
                "wind_direction": {
                    "type": "string",
                    "x-nullable": true
                },
                "toc": {
                    "type": "number",
                    "x-nullable": true
                },
                "date": {
                    "type": "string",
                    "format": "date"
                },
                "time_sampling": {
                    "type": "number",
                    "format": "float",
                    "x-nullable": true
                },
                "is_construction": {
                    "type": "boolean"
                },
                "depth_to_water_comparison": {
                    "type": "string",
                    "x-nullable": true
                },
                "depth_to_bottom": {
                    "type": "number",
                    "x-nullable": true
                },
                "depth_to_product_comparison": {
                    "type": "string",
                    "x-nullable": true
                },
                "diameter": {
                    "type": "number",
                    "x-nullable": true
                },
                "wind_speed": {
                    "type": "number",
                    "x-nullable": true
                },
                "total_depth": {
                    "type": "number",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "has_free_product": {
                    "type": "boolean",
                    "x-nullable": true
                },
                "air_temperature": {
                    "type": "number",
                    "x-nullable": true
                },
                "product_thickness": {
                    "type": "number",
                    "format": "float"
                },
                "drawdown": {
                    "type": "number",
                    "format": "float",
                    "x-nullable": true
                },
                "time_sampling_comparison": {
                    "type": "string",
                    "x-nullable": true
                },
                "datetime": {
                    "type": "string",
                    "format": "date-time"
                },
                "drawdown_comparison": {
                    "type": "string",
                    "x-nullable": true
                },
                "depth_to_water": {
                    "type": "number",
                    "x-nullable": true
                },
                "free_product": {
                    "type": "number",
                    "x-nullable": true
                },
                "alias": {
                    "type": "string",
                    "x-nullable": true
                },
                "diameter_units": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "required": [
                "datetime",
                "type"
            ]
        },
        "WellStabilityChecks": {
            "type": "object",
            "properties": {
                "flow_rate": {
                    "type": "number",
                    "x-nullable": true
                },
                "flow_rate_comparison": {
                    "type": "string",
                    "x-nullable": true
                },
                "dissolved_o2": {
                    "type": "number",
                    "x-nullable": true
                },
                "temperature": {
                    "type": "number",
                    "x-nullable": true
                },
                "interval": {
                    "type": "number",
                    "x-nullable": true
                },
                "date_time": {
                    "type": "string",
                    "format": "date-time"
                },
                "temperature_comparison": {
                    "type": "string",
                    "x-nullable": true
                },
                "dissolved_o2_comparison": {
                    "type": "string",
                    "x-nullable": true
                },
                "oxygen_reduction_potential": {
                    "type": "number",
                    "x-nullable": true
                },
                "turbidity": {
                    "type": "number",
                    "x-nullable": true
                },
                "turbidity_unit": {
                    "type": "string",
                    "x-nullable": true
                },
                "oxygen_reduction_potential_comparison": {
                    "type": "string",
                    "x-nullable": true
                },
                "conductivity_comparison": {
                    "type": "string",
                    "x-nullable": true
                },
                "conductivity_unit": {
                    "type": "string",
                    "x-nullable": true
                },
                "conductivity": {
                    "type": "number",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "turbidity_comparison": {
                    "type": "string",
                    "x-nullable": true
                },
                "acidity_unit": {
                    "type": "string",
                    "x-nullable": true
                },
                "oxygen_reduction_potential_unit": {
                    "type": "string",
                    "x-nullable": true
                },
                "is_final_stability": {
                    "type": "boolean"
                },
                "dissolved_o2_unit": {
                    "type": "string",
                    "x-nullable": true
                },
                "water_depth_comparison": {
                    "type": "string",
                    "x-nullable": true
                },
                "well_gauge_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "acidity": {
                    "type": "number",
                    "x-nullable": true
                },
                "acidity_comparison": {
                    "type": "string",
                    "x-nullable": true
                },
                "running_volume": {
                    "type": "number",
                    "x-nullable": true
                },
                "water_depth": {
                    "type": "number",
                    "x-nullable": true
                },
                "temperature_unit": {
                    "type": "string",
                    "x-nullable": true
                },
                "flow_rate_unit": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "required": [
                "date_time",
                "is_final_stability",
                "well_gauge_id"
            ]
        },
        "Workspace": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "organization_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "payment_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "is_demo_workspace": {
                    "type": "boolean",
                    "description": "Is this workspace a demo or test workspace and should be excluded from product statistics"
                },
                "organization_profile_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "sub_domain": {
                    "type": "string",
                    "items": {
                        "type": "string"
                    }
                },
                "organization_info": {
                    "type": "string",
                    "x-nullable": true
                },
                "slug": {
                    "type": "string"
                }
            },
            "required": [
                "name"
            ]
        },
        "SampleMedia": {
            "type": "object",
            "properties": {
                "slug": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            },
            "required": [
                "slug",
                "type"
            ]
        },
        "SamplingMethod": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                },
                "description": {
                    "type": "string"
                },
                "media_type": {
                    "type": "string"
                }
            },
            "required": [
                "media_type"
            ]
        },
        "SubDomain": {
            "type": "object",
            "properties": {
                "workspace_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "lab_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "slug": {
                    "type": "string"
                },
                "workspace": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "required": [
                "slug"
            ]
        },
        "Substance": {
            "type": "object",
            "properties": {
                "sample_media_type": {
                    "type": "string"
                },
                "form": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "substance_group_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "name": {
                    "type": "string"
                },
                "cas_id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "name",
                "sample_media_type",
                "substance_group_id"
            ]
        },
        "UserLabRole": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "user_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "role": {
                    "type": "string"
                },
                "lab_id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "lab_id",
                "user_id"
            ]
        },
        "UserRegistrationDevice": {
            "type": "object",
            "properties": {
                "registration_token": {
                    "type": "string"
                },
                "user_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "StorageLocation": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                }
            }
        },
        "ReportBlockGraph": {
            "type": "object",
            "properties": {
                "fields": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "axis": {
                    "type": "string",
                    "x-nullable": true
                },
                "report_block_id": {
                    "type": "string",
                    "format": "uuid"
                }
            },
            "required": [
                "report_block_id"
            ]
        },
        "SoilAnalyticalTableSchema": {
            "type": "object",
            "properties": {
                "client_name": {
                    "type": "string"
                },
                "city": {
                    "type": "string"
                },
                "state": {
                    "type": "string"
                },
                "site_name": {
                    "type": "string"
                },
                "country": {
                    "type": "string"
                },
                "zip": {
                    "type": "string"
                },
                "substance_units": {
                    "type": "object"
                },
                "address": {
                    "type": "string"
                },
                "criteria": {
                    "type": "object"
                },
                "rows": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "boringTitle": {
                                "type": "string"
                            },
                            "data": {
                                "type": "object"
                            }
                        }
                    }
                },
                "substances": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        },
        "DrinkingWater": {
            "type": "object",
            "properties": {
                "pws_owner_phone": {
                    "type": "string",
                    "x-nullable": true
                },
                "location_id": {
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "reason": {
                    "type": "string",
                    "x-nullable": true
                },
                "public_water_system_name": {
                    "type": "string",
                    "x-nullable": true
                },
                "deleted_by": {
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "water_sources": {
                    "type": "string",
                    "x-nullable": true
                },
                "address_id": {
                    "type": "string",
                    "format": "uuid"
                },
                "type_of_supply": {
                    "type": "string",
                    "x-nullable": true
                },
                "field_event_id": {
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "created_by": {
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "deleted_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "pws_id": {
                    "type": "string",
                    "x-nullable": true
                },
                "license": {
                    "type": "string",
                    "x-nullable": true
                }
            }
        },
        "LocationsInfo": {
            "type": "object",
            "properties": {
                "fixture_type": {
                    "type": "string",
                    "x-nullable": true
                },
                "ph": {
                    "type": "number",
                    "x-nullable": true
                },
                "location_id": {
                    "type": "string"
                },
                "building_name": {
                    "type": "string",
                    "x-nullable": true
                },
                "chlorine_type": {
                    "type": "string",
                    "x-nullable": true
                },
                "id": {
                    "type": "string",
                    "format": "uuid"
                },
                "deleted_by": {
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "sample_type": {
                    "type": "string",
                    "x-nullable": true
                },
                "created_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "created_by": {
                    "type": "string",
                    "format": "uuid",
                    "x-nullable": true
                },
                "sample_volume": {
                    "type": "number",
                    "x-nullable": true
                },
                "sample_location_description": {
                    "type": "string",
                    "x-nullable": true
                },
                "chlorine_residual": {
                    "type": "string",
                    "x-nullable": true
                },
                "deleted_at": {
                    "type": "string",
                    "format": "date-time",
                    "x-nullable": true
                },
                "building_id": {
                    "type": "string",
                    "x-nullable": true
                }
            },
            "required": [
                "location_id"
            ]
        }
    },
    "responses": {
        "ParseError": {
            "description": "When a mask can't be parsed"
        },
        "MaskError": {
            "description": "When any error occurs on mask"
        },
        "ValidationError": {},
        "GenericException": {}
    }
}
